datasource database {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum generatedFor {
  FOR_ONE
  FOR_ALL
  FOR_ALL_LEVEL
  FOR_NEW_MEMBER
  FOR_REMOVE_MEMBER
  FOR_TRANSFER
}

model actionLog {
  id          Int      @map("id") @default(autoincrement())
  userId      Int?     @map("user_id")
  description String?  @map("description") @database.VarChar(255)
  type        Int      @map("type")
  createdTime DateTime @default(now()) @map("created_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@id([id, type])
  @@map("action_log")
}

model actionProcessStep {
  id                Int      @id @map("id") @default(autoincrement())
  processStepId     Int      @map("process_step_id")
  nextProcessStepId Int      @map("next_process_step_id")
  countryId         Int?     @map("country_id")
  bankId            Int?     @map("bank_id")
  priority          Int?     @map("priority") @default(1) @database.TinyInt
  serviceTypeId     Int?     @map("service_type_id")
  actionStepTypeId  Int      @map("action_step_type_id")
  createdTime       DateTime @default(now()) @map("created_time")
  updatedTime       DateTime @updatedAt @map("updated_time")
  deletedTime       DateTime @default(now()) @map("deleted_time")
  isDeleted         Boolean  @default(false) @map("is_deleted")

  @@map("actionProcessStep")
}

model actionStepType {
  id          Int      @map("id") @id @default(autoincrement())
  name        String?  @map("name") @database.VarChar(255)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("actionStepType")
}

model additionProcess {
  id             Int      @map("id") @id @default(autoincrement())
  taskId         Int      @map("task_id")
  trackingLink   String?  @map("tracking_link") @database.VarChar(200)
  serviceTypeIds Json?    @map("service_type_ids")
  createdTime    DateTime @default(now()) @map("created_time")
  updatedTime    DateTime @updatedAt @map("updated_time")
  deletedTime    DateTime @default(now()) @map("deleted_time")
  isDeleted      Boolean  @default(false) @map("is_deleted")

  @@map("additionProcess")
}

model agency {
  id          Int      @map("id") @id @default(autoincrement())
  name        String?  @map("name") @database.VarChar(100)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("agency")
}

model agent {
  id           Int      @map("id") @id @default(autoincrement())
  name         String?  @map("name") @database.VarChar(200)
  email        String?  @map("email") @database.VarChar(200)
  countryId    Int?     @map("country_id")
  agencyId     Int      @map("agency_id")
  agentTypeId  Int      @map("agent_type_id")
  bankId       Int?     @map("bank_id")
  isHasNominee Boolean? @map("is_has_nominee") @default(false)
  createdTime  DateTime @default(now()) @map("created_time")
  updatedTime  DateTime @updatedAt @map("updated_time")
  deletedTime  DateTime @default(now()) @map("deleted_time")
  isDeleted    Boolean  @default(false) @map("is_deleted")

  @@map("agent")
}

model agentType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(100)
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("agentType")
}

model airport {
  id          Int      @id @map("id") @default(autoincrement())
  name        String?  @map("name") @database.VarChar(100)
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("airport")
}

model answer {
  id              Int      @id @map("id") @default(autoincrement())
  valueInt        Int?     @map("value_int")
  valueText       String?  @map("value_text") @database.Text
  optionId        Int      @map("option_id")
  taskId          Int?     @map("task_id")
  fatcaId         Int?     @map("fatca_id")
  selectCountryId Int?     @map("select_country_id")
  companyMemberId Int?     @map("company_member_id")
  questionId      Int?     @map("question_id")
  companyId       Int?     @map("company_id")
  createdTime     DateTime @default(now()) @map("created_time")
  updatedTime     DateTime @updatedAt @map("updated_time")
  deletedTime     DateTime @default(now()) @map("deleted_time")
  isDeleted       Boolean  @default(false) @map("is_deleted")

  @@map("answer")
}

model Api {
  id              Int      @map("id") @id @default(autoincrement())
  url             String   @map("url") @database.VarChar(255)
  apiMethodId     Int      @map("api_method_id")
  note            Json?    @map("note")
  isRecaptcha     Boolean? @map("is_recaptcha") @default(false)
  isAuthorization Boolean? @map("is_authorization") @default(false)
  description     String?  @map("description") @database.Text
  createdTime     DateTime @default(now()) @map("created_time")
  updatedTime     DateTime @updatedAt @map("updated_time")
  deletedTime     DateTime @default(now()) @map("deleted_time")
  isDeleted       Boolean  @default(false) @map("is_deleted")

  @@map("Api")
}

model apiExample {
  id          Int      @id @map("id") @default(autoincrement())
  apiId       Int      @map("api_id")
  apiStatusId Int      @map("api_status_id")
  apiGroupId  Int?     @map("api_group_id")
  body        Json?    @map("body")
  param       Json?    @map("param")
  query       Json?    @map("query")
  response    Json?    @map("response")
  description String?  @map("description") @database.Text
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("apiExample")
}

model apiGroup {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(255)
  description String?  @map("description") @database.Text
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("apiGroup")
}

model ApiHasGroup {
  apiId       Int      @map("api_id")
  apiGroupId  Int      @map("api_group_id")
  description String?  @map("description") @database.Text
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@id([apiGroupId, apiId])
  @@map("ApiHasGroup")
}

model ApiMethod {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  description String?  @map("description") @database.Text
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ApiMethod")
}

model ApiStatus {
  id          Int      @id @map("id") @default(autoincrement())
  code        String   @map("code") @database.VarChar(45)
  description String?  @map("description") @database.Text
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ApiStatus")
}

model Bank {
  id             Int      @id @map("id") @default(autoincrement())
  name           String   @map("name") @database.VarChar(100)
  image          String?  @map("image") @database.VarChar(200)
  countryId      Int?     @map("country_id")
  initialDeposit Int?     @map("initial_deposit")
  isVirtual      Boolean? @map("is_virtual") @default(false)
  deletedTime    DateTime @default(now()) @map("deleted_time")
  isDeleted      Boolean  @default(false) @map("is_deleted")

  @@map("Bank")
}

model BankBranch {
  id          Int      @id @map("id") @default(autoincrement())
  name        String?  @map("name") @database.VarChar(200)
  address     String?  @map("address") @database.VarChar(200)
  bankId      Int?     @map("bank_id")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("BankBranch")
}

model BankHasCountry {
  bankId           Int      @map("bank_id")
  countryId        Int      @map("country_id")
  isMemberCountry  Boolean? @map("is_member_country") @default(false)
  isPartnerCountry Boolean? @map("is_partner_country") @default(false)
  isOwnerCountry   Boolean? @map("is_owner_country") @default(false)
  isRemoteOpening  Boolean? @map("is_remote_opening") @default(false)
  score            Int?     @map("score") @default(0)

  @@id([bankId, countryId])
  @@map("BankHasCountry")
}

model BankHasFileTemplate {
  bankId         Int @map("bank_id")
  fileTemplateId Int @map("file_template_id")

  @@id([bankId, fileTemplateId])
  @@map("BankHasFileTemplate")
}

model BankHasKeyword {
  id      Int     @id @default(autoincrement()) @map("id")
  bankId  Int     @map("bank_id")
  keyword String? @map("keyword") @database.Text

  @@map("BankHasKeyword")
}

model BankingProcess {
  id                          Int      @id @map("id") @default(autoincrement())
  taskId                      Int?     @map("task_id")
  bankId                      Int?     @map("bank_id")
  status                      Int?     @map("status") @default(0)
  clientTime                  BigInt?  @map("client_time")
  content                     String   @map("content") @database.VarChar(200)
  bankBranchId                Int?     @map("bank_branch_id")
  contactPerson               String?  @map("contact_person") @database.Text
  titleJob                    String?  @map("title_job") @database.VarChar(100)
  phone                       String?  @map("phone") @database.VarChar(45)
  applicationSetTrackingCode  String?  @map("application_set_tracking_code") @database.VarChar(100)
  applicationFormTrackingCode String?  @map("application_form_tracking_code") @database.VarChar(100)
  urlVideo                    String?  @map("url_video") @database.VarChar(100)
  phoneCountryId              Int?     @map("phone_country_id")
  bankAddress                 String?  @map("bank_address") @database.VarChar(45)
  createdTime                 DateTime @default(now()) @map("created_time")
  updatedTime                 DateTime @updatedAt @map("updated_time")
  deletedTime                 DateTime @default(now()) @map("deleted_time")
  isDeleted                   Boolean  @default(false) @map("is_deleted")

  @@map("BankingProcess")
}

model Billing {
  id                Int      @id @map("id") @default(autoincrement())
  countryId         Int?     @map("country_id")
  userId            Int?     @map("user_id")
  customerId        Int?     @map("customer_id")
  name              String?  @map("name") @database.Text
  postalCode        String?  @map("postal_code") @database.VarChar(45)
  phone             String?  @map("phone") @database.VarChar(45)
  address           String?  @map("address") @database.Text
  address1          String?  @map("address_1") @database.Text
  state             String?  @map("state") @database.VarChar(225)
  city              String?  @map("city") @database.VarChar(225)
  firstName         String?  @map("first_name") @database.VarChar(200)
  lastName          String?  @map("last_name") @database.VarChar(200)
  phoneNumber       String?  @map("phone_number") @database.VarChar(255)
  phoneCountryId    Int?     @map("phone_country_id")
  taxId             String?  @map("tax_id") @database.VarChar(50)
  xeroContactId     String?  @unique @map("xero_contact_id") @database.VarChar(255)
  additionProcessId Int?     @map("addition_process_id")
  createdTime       DateTime @default(now()) @map("created_time")
  updatedTime       DateTime @updatedAt @map("updated_time")
  deletedTime       DateTime @default(now()) @map("deleted_time")
  isDeleted         Boolean  @default(false) @map("is_deleted")

  @@map("Billing")
}

model BusinessActivity {
  id                         Int      @id @map("id") @default(autoincrement())
  name                       String   @map("name") @database.Text
  countryId                  Int?     @map("country_id")
  sicCode                    String?  @map("sic_code") @database.VarChar(10)
  description                String?  @map("description") @database.Text
  businessActivityIndustryId Int?     @map("business_activity_industry_id")
  labelIds                   Json?    @map("label_ids")
  isCommon                   Boolean? @map("is_common") @default(false)
  deletedTime                DateTime @default(now()) @map("deleted_time")
  isDeleted                  Boolean  @default(false) @map("is_deleted")

  @@map("BusinessActivity")
}

model BusinessActivityIndustry {
  id                              Int      @id @map("id") @default(autoincrement())
  name                            String   @map("name") @database.Text
  country_id                      Int?     @map("country_id")
  parentId                        Int?     @map("parent_id")
  parentIds                       Json?    @map("parent_ids")
  businessActivityIndustryClassId Int?     @map("business_activity_industry_class_id")
  sicCode                         String?  @map("sic_code") @database.VarChar(10)
  deletedTime                     DateTime @default(now()) @map("deleted_time")
  isDeleted                       Boolean  @default(false) @map("is_deleted")

  @@map("BusinessActivityIndustry")
}

model BusinessActivityIndustryClass {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("BusinessActivityIndustryClass")
}

model BusinessActivityLabel {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.Text
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("BusinessActivityLabel")
}

model Campaign {
  id             Int      @id @map("id") @default(autoincrement())
  name           String?  @map("name") @database.VarChar(100)
  description    String?  @map("description") @database.Text
  campaignTypeId Int?     @map("campaign_type_id")
  deletedTime    DateTime @default(now()) @map("deleted_time")
  isDeleted      Boolean  @default(false) @map("is_deleted")

  @@map("Campaign")
}

model CampaignHasVoucherType {
  campaignId        Int   @map("campaign_id")
  voucherTypeId     Int   @map("voucher_type_id")
  totalQuantity     Int?  @map("total_quantity")
  remainingQuantity Int?  @map("remaining_quantity")
  percent           Int?  @map("percent")
  config            Json? @map("config")

  @@id([campaignId, voucherTypeId])
  @@map("CampaignHasVoucherType")
}

model CampaignType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String?  @map("name") @database.VarChar(225)
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("CampaignType")
}

model CarSeat {
  id          Int      @id @map("id") @default(autoincrement())
  name        String?  @map("name") @database.Text
  babyMax     Int?     @map("baby_max") @default(0)
  value       Int?     @map("value") @default(0)
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("CarSeat")
}

model ChangeRequest {
  id                     Int      @id @map("id") @default(autoincrement())
  taskId                 Int      @map("task_id")
  companyId              Int      @map("company_id")
  changeRequestStatusId  Int      @map("change_request_status_id")
  companyMemberId        Int?     @map("company_member_id")
  companyPositionId      Int?     @map("company_position_id")
  toCompanyMemberId      Int?     @map("to_company_member_id")
  toCompanyPositionId    Int?     @map("to_company_position_id")
  changeRequestRelatedId Int?     @map("change_request_related_id")
  isApproved             Boolean  @map("is_approved") @default(false)
  createdTime            DateTime @default(now()) @map("created_time")
  updatedTime            DateTime @updatedAt @map("updated_time")
  deletedTime            DateTime @default(now()) @map("deleted_time")
  isDeleted              Boolean  @default(false) @map("is_deleted")

  @@map("ChangeRequest")
}

model ChangeRequestItem {
  id              Int      @id @map("id") @default(autoincrement())
  changeRequestId Int      @map("change_request_id")
  model           String   @map("model") @database.VarChar(100)
  fieldName       String   @map("field_name") @database.VarChar(100)
  value           String   @map("value") @database.Text
  isFee           Boolean  @map("is_fee") @default(true)
  dataType        String   @map("data_type") @database.VarChar(45)
  targetId        Int?     @map("target_id")
  createdTime     DateTime @default(now()) @map("created_time")
  updatedTime     DateTime @updatedAt @map("updated_time")
  deletedTime     DateTime @default(now()) @map("deleted_time")
  isDeleted       Boolean  @default(false) @map("is_deleted")

  @@map("ChangeRequestItem")
}

model ChangeRequestStatus {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ChangeRequestStatus")
}

model Click {
  id             Int      @id @map("id") @default(autoincrement())
  googleClientId String?  @map("google_client_id") @database.VarChar(225)
  ipAddress      String?  @map("ip_address") @database.VarChar(45)
  voucherTypeId  Int?     @map("voucher_type_id")
  createdTime    DateTime @default(now()) @map("created_time")
  updatedTime    DateTime @updatedAt @map("updated_time")
  deletedTime    DateTime @default(now()) @map("deleted_time")
  isDeleted      Boolean  @default(false) @map("is_deleted")

  @@map("Click")
}

model Company {
  id                       Int       @id @map("id") @default(autoincrement())
  version                  Int       @map("version") @default(0)
  companyCode              String?   @map("company_code") @database.VarChar(255)
  countryId                Int?      @map("country_id")
  companyRegNo             String?   @map("company_reg_no") @database.VarChar(255)
  name                     String?   @map("name") @database.VarChar(255)
  companyStatusId          Int?      @map("company_status_id")
  entityTypeId             Int?      @map("entity_type_id")
  companySuffixId          Int?      @map("company_suffix_id")
  preventiveName           String?   @map("preventive_name") @database.VarChar(255)
  address                  String?   @map("address") @database.VarChar(255)
  tax                      String?   @map("tax") @database.VarChar(255)
  tin                      String?   @map("tin") @database.VarChar(45)
  description              String?   @map("description") @database.VarChar(255)
  note                     String?   @map("note") @database.VarChar(255)
  incorporationDate        DateTime? @map("incorporation_date") @database.Date
  xeroContactId            String?   @map("xero_contact_id") @database.VarChar(255)
  businessActivity         String?   @map("business_activity") @database.VarChar(255)
  isOutsideCompany         Boolean   @map("is_outside_company") @default(false)
  renewalDate              DateTime? @map("renewal_date") @database.Date
  billingId                Int?      @map("billing_id")
  contactFullName          String?   @map("contact_full_name") @database.VarChar(255)
  contactPhone             String?   @map("contact_phone") @database.VarChar(255)
  contactEmail             String?   @map("contact_email") @database.VarChar(255)
  contactAddress           String?   @map("contact_address") @database.VarChar(255)
  tinCode                  String?   @map("tin_code") @database.VarChar(255)
  pinCode                  String?   @map("pin_code") @database.VarChar(255)
  contactPhoneCountryId    Int?      @map("contact_phone_country_id")
  contactPhoneNumber       String?   @map("contact_phone_number") @database.VarChar(255)
  contactState             String?   @map("contact_state") @database.VarChar(255)
  contactCity              String?   @map("contact_city") @database.VarChar(255)
  contactPostalCode        String?   @map("contact_postal_code") @database.VarChar(255)
  operatingCountryId       Int?      @map("operating_country_id")
  operatingCity            String?   @map("operating_city") @database.VarChar(200)
  operatingState           String?   @map("operating_state") @database.VarChar(200)
  operatingPostalCode      String?   @map("operating_postal_code") @database.VarChar(20)
  sourceFund               String?   @map("source_fund") @database.VarChar(255)
  businessFullName         String?   @map("business_full_name") @database.VarChar(200)
  businessAddress          String?   @map("business_address") @database.VarChar(200)
  businessCountryId        Int?      @map("business_country_id")
  businessCity             String?   @map("business_city") @database.VarChar(200)
  businessState            String?   @map("business_state") @database.VarChar(200)
  businessPostalCode       String?   @map("business_postal_code") @database.VarChar(20)
  businessDayEnd           Int?      @map("business_day_end")
  businessMonthEnd         Int?      @map("business_month_end")
  shareCapitalParValue     Int?      @map("share_capital_par_value")
  shareCapitalTypeOfShare  Int?      @map("share_capital_type_of_share")
  shareCapitalNumberShare  Int?      @map("share_capital_number_share")
  shareCapital             Int?      @map("share_capital")
  shareCapitalClassOfShare String?   @map("share_capital_class_of_share") @database.VarChar(255)
  issuedNumberShare        Int?      @map("issued_number_shared")
  remainingNumberShare     Int?      @map("remaining_number_share")
  articlesOfOrganization   Int?      @map("articles_of_organization")
  recordNumber             String?   @map("record_number") @database.VarChar(255)
  numOfCheckingBank        Int?      @map("num_of_checking_bank")
  businessAnnualReport     String?   @map("business_annual_report") @database.VarChar(255)
  sealImage                String?   @map("seal_image") @database.VarChar(255)
  leftCheckingBank         Int?      @map("left_checking_bank")
  businessActivityDetail   Int?      @map("business_activity_detail")
  createdTime              DateTime  @default(now()) @map("created_time")
  updatedTime              DateTime  @updatedAt @map("updated_time")
  deletedTime              DateTime  @default(now()) @map("deleted_time")
  isDeleted                Boolean   @default(false) @map("is_deleted")

  @@map("Company")
}

model CompanyEvent {
  id                 Int       @id @map("id") @default(autoincrement())
  companyId          Int       @map("company_id")
  serviceId          Int       @map("service_id")
  orderId            Int?      @map("order_id")
  name               String    @map("name") @database.VarChar(255)
  description        String?   @map("description") @database.Text
  dateCompleted      DateTime? @map("date_completed") @database.Date
  dueDate            DateTime? @map("due_date") @database.Date
  dateRemind         DateTime? @map("date_remind") @database.Date
  isNotShow          Boolean   @map("is_not_show") @default(false)
  companyEventTypeId Int?      @map("company_event_type_id")
  isNotifyDueRenewal Boolean   @map("is_notify_due_renewal") @default(false)
  createdTime        DateTime  @default(now()) @map("created_time")
  updatedTime        DateTime  @updatedAt @map("updated_time")
  deletedTime        DateTime  @default(now()) @map("deleted_time")
  isDeleted          Boolean   @default(false) @map("is_deleted")

  @@map("CompanyEvent")
}

model CompanyEventType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.Text
  description String?  @map("description") @database.Text
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("CompanyEventType")
}

model CompanyHasBusinessActivity {
  companyId          Int @map("company_id")
  businessActivityId Int @map("business_activity_id")

  @@id([companyId, businessActivityId])
  @@map("CompanyHasBusinessActivity")
}

model CompanyHasCurrency {
  companyId  Int @map("company_id")
  currencyId Int @map("currency_id")

  @@id([companyId, currencyId])
  @@map("CompanyHasCurrency")
}

model CompanyHasOperationCountry {
  companyId Int @map("company_id")
  countryId Int @map("country_id")

  @@id([companyId, countryId])
  @@map("CompanyHasOperationCountry")
}

model CompanyInterest {
  id                         Int       @id @map("id") @default(autoincrement())
  taskId                     Int       @map("task_id")
  no                         Int?      @map("no")
  companyId                  Int       @map("company_id")
  companyMemberId            Int       @map("company_member_id")
  companyPositionId          Int?      @map("company_position_id")
  corporationCompanyMemberId Int?      @map("corporation_company_member_id")
  startNumber                Int?      @map("start_number")
  endNumber                  Int?      @map("end_number")
  value                      Float     @map("value") @database.Float
  isValid                    Boolean   @map("is_valid") @default(false)
  isApproved                 Boolean   @map("is_approved") @default(false)
  issuedFileId               Int?      @map("issued_file_id")
  issuedDated                DateTime? @map("issued_dated") @database.Date
  expiredDated               DateTime? @map("expired_dated") @database.Date
  createdTime                DateTime  @default(now()) @map("created_time")
  updatedTime                DateTime  @updatedAt @map("updated_time")
  deletedTime                DateTime  @default(now()) @map("deleted_time")
  isDeleted                  Boolean   @default(false) @map("is_deleted")

  @@map("CompanyInterest")
}

model CompanyMember {
  id                           Int       @id @map("id") @default(autoincrement())
  companyId                    Int       @map("company_id")
  countryId                    Int?      @map("country_id")
  parentId                     Int?      @map("parent_id")
  typeMemberId                 Int?      @map("type_member_id")
  isNominee                    Boolean   @map("is_nominee") @default(false)
  isApproved                   Boolean   @map("is_approved") @default(false)
  firstName                    String?   @map("first_name") @database.VarChar(255)
  middleName                   String?   @map("middle_name") @database.VarChar(255)
  lastName                     String?   @map("last_name") @database.VarChar(255)
  fullName                     String?   @map("full_name") @database.VarChar(255)
  corporationName              String?   @map("corporation_name") @database.VarChar(255)
  corporationNumber            String?   @map("corporation_number") @database.VarChar(255)
  corporationDate              DateTime? @map("corporation_date") @database.Date
  genderId                     Int?      @map("gender_id")
  major                        String?   @map("major") @database.VarChar(255)
  phone                        String?   @map("phone") @database.VarChar(255)
  email                        String?   @map("email") @database.VarChar(255)
  birthday                     DateTime? @map("birthday") @database.Date
  birthCountryId               Int?      @map("birth_country_id")
  address                      String?   @map("address") @database.VarChar(255)
  passport                     String?   @map("passport") @database.VarChar(255)
  passportIssueDate            DateTime? @map("passport_issue_date") @database.Date
  passportExpireDate           DateTime? @map("passport_expire_date") @database.Date
  ssn                          String?   @map("ssn") @database.VarChar(255)
  description                  String?   @map("description") @database.VarChar(255)
  phoneCountryId               Int?      @map("phone_country_id")
  phoneNumber                  String?   @map("phone_number") @database.VarChar(255)
  assetSourceFundCastInBank    Int?      @map("asset_source_fund_cast_in_bank")
  assetSourceFundRealEstate    Int?      @map("asset_source_fund_real_estate")
  assetSourceFundOtherDetail   String?   @map("asset_source_fund_other_detail") @database.VarChar(255)
  assetSourceFundOtherMoney    Int?      @map("asset_source_fund_other_money")
  incomeSourceFundInvestment   Int?      @map("income_source_fund_investment")
  incomeSourceFundSelfEmployed Int?      @map("income_source_fund_self_employed")
  incomeSourceFundOtherDetail  String?   @map("income_source_fund_other_detail") @database.VarChar(255)
  incomeSourceFundOtherMoney   Int?      @map("income_source_fund_other_money")
  businessActivityDetail       String?   @map("business_activity_detail") @database.Text
  serviceAddress               String?   @map("service_address") @database.VarChar(255)
  operationAddress             String?   @map("operation_address") @database.VarChar(255)
  natureBusiness               String?   @map("nature_business") @database.VarChar(255)
  relationshipIntendedCompany  String?   @map("relationship_intended_company") @database.VarChar(255)
  city                         String?   @map("city") @database.VarChar(255)
  state                        String?   @map("state") @database.VarChar(255)
  postalCode                   String?   @map("postal_code") @database.VarChar(255)
  addressCountryId             Int?      @map("address_country_id")
  createdTime                  DateTime  @default(now()) @map("created_time")
  updatedTime                  DateTime  @updatedAt @map("updated_time")
  deletedTime                  DateTime  @default(now()) @map("deleted_time")
  isDeleted                    Boolean   @default(false) @map("is_deleted")

  @@map("CompanyMember")
}

model CompanyMemberOperationCountries {
  companyMemberId Int @map("company_member_id")
  countryId       Int @map("country_id")

  @@id([companyMemberId, countryId])
  @@map("CompanyMemberOperationCountries")
}

model CompanyMemberIssueReference {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(100)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("companyMemberIssueReference")
}

model CompanyMemberReferences {
  id                            Int      @id @map("id") @default(autoincrement())
  companyMemberId               Int      @map("company_member_id")
  companyMemberIssueReferenceId Int?     @map("company_member_issuse_reference_id")
  name                          String?  @map("name") @database.VarChar(255)
  phoneNumber                   String?  @map("phone_number") @database.VarChar(255)
  phoneCountryId                Int?     @map("phone_country_id")
  fax                           String?  @map("fax") @database.VarChar(255)
  email                         String?  @map("email") @database.VarChar(255)
  address                       String?  @map("address") @database.VarChar(255)
  createdTime                   DateTime @default(now()) @map("created_time")
  updatedTime                   DateTime @updatedAt @map("updated_time")
  deletedTime                   DateTime @default(now()) @map("deleted_time")
  isDeleted                     Boolean  @default(false) @map("is_deleted")

  @@map("CompanyMemberReferences")
}

model CompanyMemberType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  description String?  @map("description") @database.Text
  parentId    Int?     @map("parent_id")
  isRequired  Boolean  @map("is_required") @default(false)
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("CompanyMemberType")
}

model CompanyOwnership {
  id                         Int       @id @map("id") @default(autoincrement())
  taskId                     Int       @map("task_id")
  no                         Int?      @map("no")
  companyId                  Int       @map("company_id")
  companyMemberId            Int       @map("company_member_id")
  companyPositionId          Int?      @map("company_position_id")
  corporationCompanyMemberId Int?      @map("corporation_company_member_id")
  value                      Float     @map("value") @database.Float
  isValid                    Boolean   @map("is_valid") @default(false)
  isApproved                 Boolean   @map("is_approved") @default(false)
  issuedFileId               Int?      @map("issued_file_id")
  issuedDated                DateTime? @map("issued_dated") @database.Date
  expiredDated               DateTime? @map("expired_dated") @database.Date
  createdTime                DateTime  @default(now()) @map("created_time")
  updatedTime                DateTime  @updatedAt @map("updated_time")
  deletedTime                DateTime  @default(now()) @map("deleted_time")
  isDeleted                  Boolean   @default(false) @map("is_deleted")

  @@map("CompanyOwnership")
}

model CompanyPosition {
  id                                Int       @id @map("id") @default(autoincrement())
  companyMemberId                   Int       @map("company_member_id")
  companyMemberTypeId               Int       @map("company_member_type_id")
  corporationCompanyMemberId        Int?      @map("corporation_company_member_id")
  numberAllotted                    Int       @map("number_allotted") @default(0)
  percentOfInterest                 Float     @map("percent_of_interest") @default(0) @database.Float
  ownPercent                        Float     @map("own_percent") @default(0) @database.Float
  dateOfAppointment                 DateTime? @map("date_of_appointment") @database.Date
  dateOfResign                      DateTime? @map("date_of_resign") @database.Date
  isAppointed                       Boolean   @map("is_appointed") @default(false)
  isApproved                        Boolean   @map("is_approved") @default(false)
  isContactPerson                   Boolean   @map("is_contact_person") @default(false)
  isHandleRelationshipContactPerson Boolean   @map("is_handle_relationship_contact_person") @default(false)
  positionDetail                    String?   @map("position_detail") @database.VarChar(255)
  relationshipWithCompany           Json?     @map("relationship_with_company")
  createdTime                       DateTime  @default(now()) @map("created_time")
  updatedTime                       DateTime  @updatedAt @map("updated_time")
  deletedTime                       DateTime  @default(now()) @map("deleted_time")
  isDeleted                         Boolean   @default(false) @map("is_deleted")

  @@map("CompanyPosition")
}

model CompanyShare {
  id                         Int       @id @map("id") @default(autoincrement())
  taskId                     Int       @map("task_id")
  no                         Int?      @map("no")
  companyId                  Int       @map("company_id")
  companyMemberId            Int       @map("company_member_id")
  companyPositionId          Int?      @map("company_position_id")
  corporationCompanyMemberId Int?      @map("corporation_company_member_id")
  startNumber                BigInt?   @map("start_number")
  endNumber                  BigInt?   @map("end_number")
  value                      BigInt    @map("value")
  isValid                    Boolean   @map("is_valid") @default(false)
  isApproved                 Boolean   @map("is_approved") @default(false)
  issuedFileId               Int?      @map("issued_file_id")
  issuedDated                DateTime? @map("issued_dated") @database.Date
  expiredDated               DateTime? @map("expired_dated") @database.Date
  createdTime                DateTime  @default(now()) @map("created_time")
  updatedTime                DateTime  @updatedAt @map("updated_time")
  deletedTime                DateTime  @default(now()) @map("deleted_time")
  isDeleted                  Boolean   @default(false) @map("is_deleted")

  @@map("CompanyShare")
}

model CompanyStatus {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("CompanyStatus")
}

model CompanySuffix {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  description String?  @map("description") @database.Text
  isPrefix    Boolean  @map("is_prefix") @default(false)
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("CompanySuffix")
}

model ContactFrom {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(50)
  description String?  @map("description") @database.Text
  type        Int      @map("type") @default(2)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ContactFrom")
}

model ContactFromHistory {
  id            Int      @id @map("id") @default(autoincrement())
  customerId    Int      @map("customer_id")
  contactFromId Int      @map("contact_from_id")
  tagName       String?  @map("tag_name") @database.VarChar(255)
  createdTime   DateTime @default(now()) @map("created_time")
  updatedTime   DateTime @updatedAt @map("updated_time")
  deletedTime   DateTime @default(now()) @map("deleted_time")
  isDeleted     Boolean  @default(false) @map("is_deleted")

  @@map("ContactFromHistory")
}

model Continent {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Continent")
}

model Country {
  id           Int      @id @map("id") @default(autoincrement())
  name         String   @map("name") @database.VarChar(45)
  guid         String   @map("guid") @unique @database.VarChar(100)
  countryCode  String?  @map("country_code") @database.VarChar(45)
  phoneCode    String?  @map("phone_code") @database.VarChar(45)
  subName      String   @map("sub_name") @database.VarChar(255)
  isRestricted Boolean  @map("is_restricted") @default(false)
  isCountry    Boolean  @map("is_country") @default(false)
  continentId  Int?     @map("continent_id")
  deletedTime  DateTime @default(now()) @map("deleted_time")
  isDeleted    Boolean  @default(false) @map("is_deleted")

  @@map("Country")
}

model CountryHasCompanySuffix {
  countryId       Int @map("country_id")
  companySuffixId Int @map("company_suffix_id")

  @@id([countryId, companySuffixId])
  @@map("CountryHasCompanySuffix")
}

model CountryHasEntityType {
  countryId    Int @map("country_id")
  entityTypeId Int @map("entity_type_id")

  @@id([countryId, entityTypeId])
  @@map("CountryHasEntityType")
}

model CountryHasEntityTypeHasFileTemplate {
  countryHasEntityTypeId Int @map("country_has_entity_type_id")
  fileTemplateId         Int @map("file_template_id")

  @@id([countryHasEntityTypeId, fileTemplateId])
  @@map("CountryHasEntityTypeHasFileTemplate")
}

model CountryHasQuestion {
  countryId Int @map("country_id")
  serviceId Int @map("service_id")

  @@id([countryId, serviceId])
  @@map("CountryHasQuestion")
}

model CustomerHasBank {
  customerId Int @map("customer_id")
  bankId     Int @map("bank_id")

  @@id([customerId, bankId])
  @@map("CustomerHasBank")
}

model CustomerHasSurveyChoice {
  customerId     Int      @map("customer_id")
  surveyChoiceId Int      @map("survey_choice_id")
  surveyContent  String?  @map("survey_content") @database.VarChar(255)
  createdTime    DateTime @default(now()) @map("created_time")
  updatedTime    DateTime @updatedAt @map("updated_time")
  deletedTime    DateTime @default(now()) @map("deleted_time")
  isDeleted      Boolean  @default(false) @map("is_deleted")

  @@id([customerId, surveyChoiceId])
  @@index([customerId])
  @@map("CustomerHasSurveyChoice")
}

model CustomerStatus {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  description String   @map("description") @database.VarChar(100)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("CustomerStatus")
}

model CustomerType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  description String   @map("description") @database.VarChar(100)
  createdTime DateTime @default(now()) @map("created_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("CustomerType")
}

model DeclarationTax {
  countryId          Int     @map("country_id")
  fatcaId            Int     @map("fatca_id")
  taxReferenceType   String? @map("tax_reference_type") @database.VarChar(255)
  taxReferenceNumber String? @map("tax_reference_number") @database.VarChar(255)
  deletedTime        Boolean @default(false) @map("deleted_time")

  @@id([countryId, fatcaId])
  @@map("DeclarationTax")
}

model Department {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @default("") @database.VarChar(45)
  config      Json?    @map("config")
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Department")
}

model Email {
  id              Int      @id @map("id") @default(autoincrement())
  emailTemplateId Int?     @map("email_template_id")
  subject         String?  @map("subject") @database.VarChar(255)
  agentId         Int?     @map("agent_id")
  processId       Int?     @map("process_id")
  companyMemberId Int?     @map("company_member_id")
  companyId       Int?     @map("company_id")
  order           Int?     @map("order")
  timeToSend      BigInt?  @map("time_to_send")
  isCompleted     Boolean  @map("is_completed") @default(false)
  isError         Boolean  @map("is_error") @default(false)
  isRunning       Boolean  @map("is_running") @default(false)
  description     String?  @map("description") @database.Text
  emailFrom       String?  @map("email_from") @database.VarChar(200)
  emailTo         String?  @map("email_to") @database.VarChar(225)
  emailCc         String?  @map("email_cc") @database.VarChar(255)
  attachments     String?  @map("attachments") @database.LongText
  createdTime     DateTime @default(now()) @map("created_time")
  updatedTime     DateTime @updatedAt @map("updated_time")
  deletedTime     DateTime @default(now()) @map("deleted_time")
  isDeleted       Boolean  @default(false) @map("is_deleted")

  @@index([agentId], map: "fk_ema_agent_id_age_id_hpr1")
  @@index([companyMemberId], map: "fk_ema_company_member_id_com_id_erjh")
  @@index([emailTemplateId], map: "fk_ema_email_template_id_ema_id_5exl")
  @@index([processId], map: "fk_ema_process_id_pro_id_gmvr")
  @@index([companyId], map: "fk_email_company_id_1_idx")
  @@map("Email")
}

model EmailTemplate {
  id                  Int      @id @map("id") @default(autoincrement())
  name                String?  @map("name") @database.VarChar(255)
  description         String?  @map("description") @database.VarChar(255)
  previewText         String?  @map("preview_text") @database.VarChar(255)
  path                String?  @map("path") @database.VarChar(200)
  preTime             Int?     @map("pre_time")
  nextEmailTemplateId Int?     @map("next_email_template_id")
  processStepId       Int?     @map("process_step_id")
  emailTypeId         Int?     @map("email_type_id")
  maxTimeSend         Int?     @map("max_time_send")
  isEmailRemind       Boolean  @map("is_email_remind") @default(false)
  dataViewTables      Json?    @map("data_view_tables")
  createdTime         DateTime @default(now()) @map("created_time")
  updatedTime         DateTime @updatedAt @map("updated_time")
  deletedTime         DateTime @default(now()) @map("deleted_time")
  isDeleted           Boolean  @default(false) @map("is_deleted")

  @@index([emailTypeId], map: "fk_email_type_id_idx")
  @@index([nextEmailTemplateId], map: "fk_next_email_template_id")
  @@index([processStepId], map: "fk_process_step_id")
  @@map("EmailTemplate")
}

model EmailTemplateHasReceiver {
  id              Int      @id @map("id") @default(autoincrement())
  emailTemplateId Int      @map("email_template_id")
  email           String?  @map("email") @database.VarChar(100)
  userId          Int?     @map("user_id")
  roleId          Int?     @map("role_id")
  groupId         Int?     @map("group_id")
  isMainReceiver  Boolean  @map("is_main_receiver") @default(false)
  isCcReceiver    Boolean  @map("is_cc_receiver") @default(false)
  isBccReceiver   Boolean  @map("is_bcc_receiver") @default(false)
  isExcluded      Boolean  @map("is_excluded") @default(false)
  createdTime     DateTime @default(now()) @map("created_time")
  updatedTime     DateTime @updatedAt @map("updated_time")
  deletedTime     DateTime @default(now()) @map("deleted_time")
  isDeleted       Boolean  @default(false) @map("is_deleted")

  @@index([emailTemplateId], map: "fk_email_template_id_idx")
  @@index([groupId], map: "fk_group_id_idx")
  @@index([roleId], map: "fk_role_id_idx")
  @@index([userId], map: "fk_user_id_idx")
  @@map("EmailTemplateHasReceiver")
}

model EmailTrigger {
  id             Int      @id @map("id") @default(autoincrement())
  name           String?  @map("name") @database.VarChar(255)
  type           Int?     @map("type")
  serviceTypeIds Json?    @map("service_type_ids")
  processStepId  Int?     @map("process_step_id")
  isRemindAgent  Boolean  @map("is_remind_agent") @default(false)
  createdTime    DateTime @default(now()) @map("created_time")
  updatedTime    DateTime @updatedAt @map("updated_time")
  deletedTime    DateTime @default(now()) @map("deleted_time")
  isDeleted      Boolean  @default(false) @map("is_deleted")

  @@index([processStepId], map: "fk_ema_process_step_id_pro_id_c9l8")
  @@map("EmailTrigger")
}

model EmailTriggerHasProcess {
  emailTriggerId  Int      @map("email_trigger_id")
  processId       Int      @map("process_id")
  emailTemplateId Int      @map("email_template_id")
  isRemind        Int      @map("is_remind")
  createdTime     DateTime @default(now()) @map("created_time")
  updatedTime     DateTime @updatedAt @map("updated_time")

  @@id([emailTemplateId, emailTriggerId, processId])
  @@index([emailTriggerId])
  @@index([emailTemplateId], map: "fk_ema_email_template_id_ema_id_jsfc")
  @@index([processId], map: "fk_ema_process_id_pro_id_5hgb")
  @@map("EmailTriggerHasProcess")
}

model EmailType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String?  @map("name") @database.VarChar(45)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("EmailType")
}

model EntityType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String?  @map("name") @database.Text
  guid        String?  @map("guid") @database.Text
  country     String?  @map("country") @database.Text
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("EntityType")
}

model EntityTypeHasCompanySuffix {
  entityTypeId    Int @map("entity_type_id")
  companySuffixId Int @map("company_suffix_id")

  @@id([entityTypeId, companySuffixId])
  @@index([companySuffixId], map: "fk_entity_type_has_company_suffix_company_suffix1_idx")
  @@index([entityTypeId])
  @@map("EntityTypeHasCompanySuffix")
}

model Fatca {
  id                        Int      @id @map("id") @default(autoincrement())
  companyMemberId           Int?     @map("company_member_id")
  customerId                Int?     @map("customer_id")
  taskId                    Int      @map("task_id")
  holderName                String   @map("holder_name") @database.VarChar(255)
  holderBirthday            DateTime @map("holder_birthday") @database.Date
  holderCountryId           Int?     @map("holder_country_id")
  residentAddress           String?  @map("resident_address") @database.VarChar(255)
  residentCountryId         Int?     @map("resident_country_id")
  residentCity              String?  @map("resident_city") @database.VarChar(255)
  residentState             String?  @map("resident_state") @database.VarChar(255)
  residentPostalCode        String?  @map("resident_postal_code") @database.VarChar(255)
  mailingAddress            String?  @map("mailing_address") @database.VarChar(255)
  mailingCountryId          Int?     @map("mailing_country_id")
  mailingCity               String?  @map("mailing_city") @database.VarChar(255)
  mailingState              String?  @map("mailing_state") @database.VarChar(255)
  mailingPostalCode         String?  @map("mailing_postal_code") @database.VarChar(255)
  optionDeclarationUSPerson Int?     @map("option_declaration_US_person")
  taxpayerIdNumber          String?  @map("taxpayer_id_number") @database.VarChar(255)
  deletedTime               DateTime @default(now()) @map("deleted_time")
  isDeleted                 Boolean  @default(false) @map("is_deleted")

  @@index([companyMemberId], map: "fk_fat_company_member_id_com_id_dfbt")
  @@index([customerId], map: "fk_fat_customer_id_cus_id_1x24")
  @@index([holderCountryId], map: "fk_fat_holder_country_id_cou_id_350l")
  @@index([mailingCountryId], map: "fk_fat_mailing_country_id_cou_id_bmuc")
  @@index([residentCountryId], map: "fk_fat_resident_country_id_cou_id_l92h")
  @@index([taskId], map: "fk_fat_task_id_tas_id_7a31")
  @@map("Fatca")
}

model Fee {
  id          Int      @id @map("id") @default(autoincrement())
  serviceId   Int?     @map("service_id")
  feeTypeId   Int      @map("fee_type_id")
  value       Float?   @map("value") @database.Float
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@index([feeTypeId], map: "fk_fee_fee_category1")
  @@index([serviceId], map: "fk_fee_service1")
  @@map("Fee")
}

model FeeType {
  id          Int      @id @map("id") @default(autoincrement())
  value       String?  @map("value") @database.VarChar(45)
  name        String?  @map("name") @database.VarChar(45)
  cycleBegin  Int?     @map("cycle_begin") @default(0)
  cycleTime   Int?     @map("cycle_time")
  description String?  @map("description") @database.Text
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("FeeType")
}

model File {
  id                      Int      @id @map("id") @default(autoincrement())
  name                    String   @map("name") @database.VarChar(255)
  path                    String?  @map("path") @database.VarChar(255)
  mimeType                String?  @map("mime_type") @database.VarChar(255)
  s3Path                  String?  @map("s3_path") @database.VarChar(255)
  userId                  Int?     @map("user_id")
  companyId               Int?     @map("company_id")
  messageId               Int?     @map("message_id")
  orderId                 Int?     @map("order_id")
  fileTypeId              Int?     @map("file_type_id")
  taskId                  Int?     @map("task_id")
  fileTemplateId          Int?     @map("file_template_id")
  filledByCompanyMemberId Int?     @map("filled_by_company_member_id")
  isFilled                Boolean  @map("is_filled") @default(false)
  fullName                String?  @map("full_name") @database.VarChar(255)
  ipAddress               String?  @map("ip_address") @database.VarChar(255)
  noteId                  Int?     @map("note_id")
  bankId                  Int?     @map("bank_id")
  rankingPartnerId        Int?     @map("ranking_partner_id")
  changeRequestId         Int?     @map("change_request_id")
  companyMemberId         Int?     @map("company_member_id")
  apiExampleId            Int?     @map("api_example_id")
  questionGroupId         Int?     @map("question_group_id")
  toCompanyMemberId       Int?     @map("to_company_member_id")
  typeId                  Int?     @map("type_id")
  filledByUserId          Int?     @map("filled_by_user_id")
  status                  Int      @map("status") @default(1)
  companyEventId          Int?     @map("company_event_id")
  createdTime             DateTime @default(now()) @map("created_time")
  updatedTime             DateTime @updatedAt @map("updated_time")
  deletedTime             DateTime @default(now()) @map("deleted_time")
  isDeleted               Boolean  @default(false) @map("is_deleted")

  @@index([changeRequestId], map: "fk_change_request_file_id_idx")
  @@index([companyId], map: "fk_fil_company_id_com_id_e3qa")
  @@index([companyMemberId], map: "fk_fil_company_member_id_com_id_jiat")
  @@index([fileTemplateId], map: "fk_fil_file_template_id_fil_id_ev0d")
  @@index([fileTypeId], map: "fk_fil_file_type_id_fil_id_5psy")
  @@index([filledByCompanyMemberId], map: "fk_fil_filled_by_company_member_id_com_id_1lvj")
  @@index([messageId], map: "fk_fil_message_id_mes_id_2yvf")
  @@index([noteId], map: "fk_fil_note_id_not_id_1rdz")
  @@index([questionGroupId], map: "fk_fil_question_group_id_que_id_1rji")
  @@index([rankingPartnerId], map: "fk_fil_ranking_partner_id_ran_id_fly1")
  @@index([taskId], map: "fk_fil_task_id_tas_id_hjct")
  @@index([userId], map: "fk_fil_user_id_use_id_6ag1")
  @@index([orderId], map: "fk_fil_order_id_ord_id_4pg2")
  @@index([apiExampleId], map: "fk_file_api_example")
  @@index([companyEventId], map: "fk_file_company_event_id_idx")
  @@map("File")
}

model FileTemplate {
  id                        Int      @id @map("id") @default(autoincrement())
  name                      String   @map("name") @database.VarChar(255)
  description               String?  @map("description") @database.Text
  pathTemplate              String?  @map("path_template") @database.VarChar(255)
  isNotSigned               Boolean  @map("is_not_signed") @default(false)
  isESign                   Boolean  @map("is_esign") @default(false)
  isSignedForFatca          Boolean  @map("is_signed_for_FATCA") @default(false)
  isApprovedDateAppointment Boolean  @map("is_approved_date_appointment") @default(false)
  isInactive                Boolean  @map("is_inactive") @default(false)
  collectSameId             Int?     @map("collect_same_id")
  parentId                  Int?     @map("parent_id")
  fileTemplateTypeId        Int?     @map("file_template_type_id")
  fileTypeId                Int?     @map("file_type_id")
  dataConfig                Json?    @map("data_config")
  deletedTime               DateTime @default(now()) @map("deleted_time")
  isDeleted                 Boolean  @default(false) @map("is_deleted")

  @@index([collectSameId], map: "fk_collect_same_id_INDEX")
  @@index([parentId], map: "FK_file_template_parent_id_idx")
  @@map("FileTemplate")
}

model FileTemplateHasCompanyMemberType {
  fileTemplateId         Int          @map("file_template_id")
  companyMemberTypeId    Int          @map("company_member_type_id")
  typeMemberId           Int?         @map("type_member_id")
  isSignedByAll          Boolean      @map("is_signed_by_all") @default(false)
  isSignedByAppointed    Boolean      @map("is_signed_by_appointed") @default(false)
  isSignedByIndividual   Boolean      @map("is_signed_by_individual") @default(false)
  isSignedTransfer       Boolean      @map("is_signed_transfer") @default(false)
  isSignedByOldestMember Boolean      @map("is_signed_by_oldest_member") @default(false)
  generatedFor           generatedFor @map("generated_for")
  deletedTime            DateTime     @default(now()) @map("deleted_time")
  isDeleted              Boolean      @default(false) @map("is_deleted")

  @@id([fileTemplateId, companyMemberTypeId, generatedFor])
  @@index([typeMemberId], map: "fk_fcm_type_member_id_idx")
  @@map("FileTemplateHasCompanyMemberType")
}

model FileTemplateHasNationality {
  fileTemplateId        Int      @map("file_template_id")
  countryId             Int      @map("country_id")
  isFillMoreInformation Boolean  @map("is_fill_more_information") @default(false)
  createdTime           DateTime @default(now()) @map("created_time")
  updatedTime           DateTime @updatedAt @map("updated_time")
  deletedTime           DateTime @default(now()) @map("deleted_time")
  isDeleted             Boolean  @default(false) @map("is_deleted")

  @@id([countryId, fileTemplateId])
  @@map("FileTemplateHasNationality")
}

model FileTemplateHasRankingPartnerType {
  fileTemplateId       Int @map("file_template_id")
  rankingPartnerTypeId Int @map("ranking_partner_type_id")

  @@id([fileTemplateId, rankingPartnerTypeId])
  @@map("FileTemplateHasRankingPartnerType")
}

model FileTemplateType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("FileTemplateType")
}

model FileType {
  id              Int      @id @map("id") @default(autoincrement())
  name            String   @map("name") @database.VarChar(120)
  fileTypeGroupId Int?     @map("file_type_group_id")
  parentId        Int?     @map("parent_id")
  createdTime     DateTime @default(now()) @map("created_time")
  updatedTime     DateTime @updatedAt @map("updated_time")
  deletedTime     DateTime @default(now()) @map("deleted_time")
  isDeleted       Boolean  @default(false) @map("is_deleted")

  @@index([parentId])
  @@map("FileType")
}

model GaChannel {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("GaChannel")
}

model Gender {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  prefix      String   @map("prefix") @database.VarChar(45)
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Gender")
}

model GrantScheme {
  id           Int      @id @map("id") @default(autoincrement())
  name         String   @map("name") @database.VarChar(100)
  description  String?  @map("description") @database.Text
  countryId    Int?     @map("country_id")
  keyFacts     String?  @map("key_facts") @database.Text
  introduction String?  @map("introduction") @database.Text
  benefits     String?  @map("benefits") @database.Text
  eligibility  String?  @map("eligibility") @database.Text
  howToApply   String?  @map("how_to_apply") @database.Text
  createdTime  DateTime @default(now()) @map("created_time")
  updatedTime  DateTime @updatedAt @map("updated_time")
  deletedTime  DateTime @default(now()) @map("deleted_time")
  isDeleted    Boolean  @default(false) @map("is_deleted")

  @@index([countryId], map: "fk_grant_scheme_country_idx")
  @@map("GrantScheme")
}

model GrantSchemeHasGrantTypeAttribute {
  id                  Int      @id @map("id") @default(autoincrement())
  grantSchemeId       Int      @map("grant_scheme_id")
  needsBasedId        Int?     @map("needs_based_id")
  industryId          Int?     @map("industry_id")
  businessStageId     Int?     @map("business_stage_id")
  yearsOperationId    Int?     @map("years_operation_id")
  businessSizeId      Int?     @map("business_size_id")
  localShareholdingId Int?     @map("local_shareholding_id")
  numberEmployeesId   Int?     @map("number_employees_id")
  typeId              Int?     @map("type_id")
  agencyId            Int?     @map("agency_id")
  createdTime         DateTime @default(now()) @map("created_time")
  updatedTime         DateTime @updatedAt @map("updated_time")
  deletedTime         DateTime @default(now()) @map("deleted_time")
  isDeleted           Boolean  @default(false) @map("is_deleted")

  @@index([agencyId], map: "fk_grant_scheme_has_grant_type_attribute_agency_idx")
  @@index([businessSizeId], map: "fk_grant_scheme_has_grant_type_attribute_business_size_idx")
  @@index([businessStageId], map: "fk_grant_scheme_has_grant_type_attribute_business_stage_idx")
  @@index([grantSchemeId], map: "fk_grant_scheme_has_grant_type_attribute_grant_scheme_idx")
  @@index([industryId], map: "fk_grant_scheme_has_grant_type_attribute_industry_idx")
  @@index([localShareholdingId], map: "fk_grant_scheme_has_grant_type_attribute_local_shareholding_idx")
  @@index([needsBasedId], map: "fk_grant_scheme_has_grant_type_attribute_needs_base_idx")
  @@index([numberEmployeesId], map: "fk_grant_scheme_has_grant_type_attribute_number_employees_idx")
  @@index([typeId], map: "fk_grant_scheme_has_grant_type_attribute_type_idx")
  @@index([yearsOperationId], map: "fk_grant_scheme_has_grant_type_attribute_years_operation_idx")
  @@map("GrantSchemeHasGrantTypeAttribute")
}

model GrantType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(100)
  description String?  @map("description") @database.Text
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("GrantType")
}

model GrantTypeAttribute {
  id                    Int      @id @map("id") @default(autoincrement())
  grantTypeId           Int      @map("grant_type_id")
  name                  String   @map("name") @database.VarChar(100)
  description           String?  @map("description") @database.Text
  parentId              Int?     @map("parent_id")
  countryId             Int?     @map("country_id")
  grantTypeAttributeCol String?  @map("grant_type_attribute_col") @database.VarChar(45)
  isDisabled            Boolean? @map("is_disabled") @default(false)
  order                 Int?     @map("order")
  createdTime           DateTime @default(now()) @map("created_time")
  updatedTime           DateTime @updatedAt @map("updated_time")
  deletedTime           DateTime @default(now()) @map("deleted_time")
  isDeleted             Boolean  @default(false) @map("is_deleted")

  @@index([countryId], map: "fk_grant_type_attribute_country_idx")
  @@index([grantTypeId], map: "fk_grant_type_attribute_type_idx")
  @@index([parentId], map: "fk_grant_type_attribute_self_idx")
  @@map("GrantTypeAttribute")
}

model GroupHasUser {
  userId      Int      @map("user_id")
  groupId     Int      @map("group_id")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@id([groupId, userId])
  @@map("GroupHasUser")
}

model HistoryCompany {
  id                         Int       @id @map("id") @default(autoincrement())
  version                    Int       @map("version") @default(1)
  companyId                  Int       @map("company_id")
  taskId                     Int       @map("task_id")
  companyCode                String?   @map("company_code") @database.VarChar(255)
  countryId                  Int?      @map("country_id")
  companyRegNo               String?   @map("company_reg_no") @database.VarChar(255)
  name                       String?   @map("name") @database.VarChar(255)
  companyStatusId            Int?      @map("company_status_id")
  entityTypeId               Int?      @map("entity_type_id")
  companySuffixId            Int?      @map("company_suffix_id")
  preventiveName             String?   @map("preventive_name") @database.VarChar(255)
  address                    String?   @map("address") @database.VarChar(255)
  tax                        String?   @map("tax") @database.VarChar(255)
  description                String?   @map("description") @database.VarChar(255)
  note                       String?   @map("note") @database.VarChar(255)
  incorporationDate          DateTime? @map("incorporation_date") @database.Date
  xeroContactId              String?   @map("xero_contact_id") @database.VarChar(255)
  isOutsideCompany           Boolean   @map("is_outside_company") @default(false)
  renewalDate                DateTime? @map("renewal_date") @database.Date
  billingId                  Int?      @map("billing_id")
  contactFullName            String?   @map("contact_full_name") @database.VarChar(255)
  contactPhone               String?   @map("contact_phone") @database.VarChar(255)
  contactEmail               String?   @map("contact_email") @database.VarChar(255)
  contactAddress             String?   @map("contact_address") @database.VarChar(255)
  tinCode                    String?   @map("tin_code") @database.VarChar(255)
  pinCode                    String?   @map("pin_code") @database.VarChar(255)
  contactPhoneCountryId      Int?      @map("contact_phone_country_id")
  contactPhoneNumber         String?   @map("contact_phone_number") @database.VarChar(255)
  contactState               String?   @map("contact_state") @database.VarChar(255)
  contactCity                String?   @map("contact_city") @database.VarChar(255)
  contactPostalCode          String?   @map("contact_postal_code") @database.VarChar(255)
  operatingCountryId         Int?      @map("operating_country_id")
  operatingCity              String?   @map("operating_city") @database.VarChar(200)
  operatingState             String?   @map("operating_state") @database.VarChar(200)
  operatingPostalCode        String?   @map("operating_postal_code") @database.VarChar(20)
  sourceFund                 String?   @map("source_fund") @database.VarChar(255)
  businessFullName           String?   @map("business_full_name") @database.VarChar(200)
  businessAddress            String?   @map("business_address") @database.VarChar(200)
  businessCountryId          Int?      @map("business_country_id")
  businessCity               String?   @map("business_city") @database.VarChar(200)
  businessState              String?   @map("business_state") @database.VarChar(200)
  businessPostalCode         String?   @map("business_postal_code") @database.VarChar(20)
  businessDayEnd             Int?      @map("business_day_end")
  businessMonthEnd           Int?      @map("business_month_end")
  shareCapitalParValue       Int?      @map("share_capital_par_value")
  shareCapitalTypeOfShare    Int?      @map("share_capital_type_of_share")
  shareCapitalNumberShare    Int?      @map("share_capital_number_share")
  shareCapital               Int?      @map("share_capital")
  shareCapitalClassOfShare   String?   @map("share_capital_class_of_share") @database.VarChar(255)
  issuedNumberShare          Int?      @map("issued_number_share")
  remainingNumberShare       Int?      @map("remaining_number_share")
  articlesOfOrganization     Int?      @map("articles_of_organization")
  recordNumber               String?   @map("record_number") @database.VarChar(255)
  numOfCheckingBank          Int?      @map("num_of_checking_bank")
  businessAnnualReport       String?   @map("business_annual_report") @database.VarChar(255)
  sealImage                  String?   @map("seal_image") @database.VarChar(255)
  leftCheckingBank           Int?      @map("left_checking_bank")
  businessActivityDetail     Int?      @map("business_activity_detail")
  CompanyHasBusinessActivity Json      @map("CompanyHasBusinessActivity") @default("[]")
  createdTime                DateTime  @default(now()) @map("created_time")
  updatedTime                DateTime  @updatedAt @map("updated_time")
  deletedTime                DateTime  @default(now()) @map("deleted_time")
  isDeleted                  Boolean   @default(false) @map("is_deleted")

  @@index([billingId], map: "billing_id")
  @@index([businessCountryId], map: "business_country_id")
  @@index([companyStatusId], map: "company_status_id")
  @@index([companySuffixId], map: "company_suffix_id")
  @@index([countryId], map: "country_id")
  @@index([entityTypeId], map: "entity_type_id")
  @@index([operatingCountryId], map: "operating_country_id")
  @@map("HistoryCompany")
}

model HistoryCompanyMember {
  id                           Int       @id @map("id") @default(autoincrement())
  version                      Int       @map("version") @default(1)
  taskId                       Int       @map("task_id")
  companyId                    Int       @map("company_id")
  companyMemberId              Int       @map("company_member_id")
  countryId                    Int?      @map("country_id")
  typeMemberId                 Int?      @map("type_member_id")
  isNominee                    Boolean   @map("is_nominee") @default(false)
  isApproved                   Boolean   @map("is_approved") @default(false)
  firstName                    String?   @map("first_name") @database.VarChar(255)
  middleName                   String?   @map("middle_name") @database.VarChar(255)
  lastName                     String?   @map("last_name") @database.VarChar(255)
  fullName                     String?   @map("full_name") @database.VarChar(255)
  corporationName              String?   @map("corporation_name") @database.VarChar(255)
  corporationNumber            String?   @map("corporation_number") @database.VarChar(255)
  corporationDate              DateTime? @map("corporation_date") @database.Date
  genderId                     Int?      @map("gender_id")
  major                        String?   @map("major") @database.VarChar(255)
  phone                        String?   @map("phone") @database.VarChar(255)
  email                        String?   @map("email") @database.VarChar(255)
  birthday                     DateTime? @map("birthday") @database.Date
  birthCountryId               Int?      @map("birth_country_id")
  address                      String?   @map("address") @database.VarChar(255)
  passport                     String?   @map("passport") @database.VarChar(255)
  passportIssueDate            DateTime? @map("passport_issue_date") @database.Date
  passportExpireDate           DateTime? @map("passport_expire_date") @database.Date
  ssn                          String?   @map("ssn") @database.VarChar(255)
  description                  String?   @map("description") @database.VarChar(255)
  phoneCountryId               Int?      @map("phone_country_id")
  phoneNumber                  String?   @map("phone_number") @database.VarChar(255)
  assetSourceFundCastInBank    Int?      @map("asset_source_fund_cast_in_bank")
  assetSourceFundRealEstate    Int?      @map("asset_source_fund_real_estate")
  assetSourceFundOtherDetail   String?   @map("asset_source_fund_other_detail") @database.VarChar(255)
  assetSourceFundOtherMoney    Int?      @map("asset_source_fund_other_money")
  incomeSourceFundInvestment   Int?      @map("income_source_fund_investment")
  incomeSourceFundSelfEmployed Int?      @map("income_source_fund_self_employed")
  incomeSourceFundOtherDetail  String?   @map("income_source_fund_other_detail") @database.VarChar(255)
  incomeSourceFundOtherMoney   Int?      @map("income_source_fund_other_money")
  businessActivityDetail       String?   @map("business_activity_detail") @database.Text
  serviceAddress               String?   @map("service_address") @database.VarChar(255)
  operationAddress             String?   @map("operation_address") @database.VarChar(255)
  natureBusiness               String?   @map("nature_business") @database.VarChar(255)
  relationshipIntendedCompany  String?   @map("relationship_intended_company") @database.VarChar(255)
  city                         String?   @map("city") @database.VarChar(255)
  state                        String?   @map("state") @database.VarChar(255)
  postalCode                   String?   @map("postal_code") @database.VarChar(255)
  addressCountryId             Int?      @map("address_country_id")
  companyPositions             Json?     @map("CompanyPositions")
  companyShares                Json?     @map("CompanyShares")
  companyInterests             Json?     @map("CompanyInterests")
  companyOwnerships            Json?     @map("CompanyOwnerships")
  files                        Json?     @map("Files")
  companyMemberReferences      Json?     @map("CompanyMemberReferences")
  businessActivities           Json?     @map("BusinessActivities")
  createdTime                  DateTime  @default(now()) @map("created_time")
  updatedTime                  DateTime  @updatedAt @map("updated_time")
  deletedTime                  DateTime  @default(now()) @map("deleted_time")
  isDeleted                    Boolean   @default(false) @map("is_deleted")

  @@index([addressCountryId], map: "address_country_id")
  @@index([birthCountryId], map: "birth_country_id")
  @@index([countryId], map: "country_id")
  @@index([genderId], map: "gender_id")
  @@index([phoneCountryId], map: "phone_country_id")
  @@index([typeMemberId], map: "type_member_id")
  @@unique([taskId, companyMemberId, version], map: "companyMemberId_taskId_version")
  @@map("HistoryCompanyMember")
}

model HistoryFile {
  fileId          Int      @map("file_id")
  historyLogCdcId Int      @map("history_log_cdc_id")
  createdTime     DateTime @default(now()) @map("created_time")
  updatedTime     DateTime @updatedAt @map("updated_time")
  deletedTime     DateTime @default(now()) @map("deleted_time")
  isDeleted       Boolean  @default(false) @map("is_deleted")

  @@id([fileId, historyLogCdcId])
  @@map("HistoryFile")
}

model HistoryLogCDC {
  id               Int      @id @map("id") @default(autoincrement())
  userId           Int      @map("user_id")
  taskId           Int      @map("task_id")
  companyId        Int?     @map("company_id")
  actionStepTypeId Int?     @map("action_step_type_id")
  createdTime      DateTime @default(now()) @map("created_time")
  updatedTime      DateTime @updatedAt @map("updated_time")
  deletedTime      DateTime @default(now()) @map("deleted_time")
  isDeleted        Boolean  @default(false) @map("is_deleted")

  @@index([actionStepTypeId])
  @@index([companyId])
  @@index([taskId])
  @@index([userId])
  @@map("HistoryLogCDC")
}

model Holiday {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.Text
  day         Int      @map("day")
  month       Int      @map("month")
  year        Int      @map("year")
  date        DateTime @map("date") @database.Date
  countryId   Int      @map("country_id")
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@index([countryId], map: "fk_holiday_country_idx")
  @@map("Holiday")
}

model Limit {
  id                Int      @id @map("id") @default(autoincrement())
  name              String   @map("name") @database.VarChar(100)
  limitTypeId       Int      @map("limit_type_id")
  permissionGroupId Int      @map("permission_group_id")
  permissionId      Int      @map("permission_id")
  model             String?  @map("model") @database.VarChar(100)
  createdTime       DateTime @default(now()) @map("created_time")
  updatedTime       DateTime @updatedAt @map("updated_time")
  deletedTime       DateTime @default(now()) @map("deleted_time")
  isDeleted         Boolean  @default(false) @map("is_deleted")

  @@index([limitTypeId], map: "fk_limit_type_id_idx")
  @@index([permissionGroupId], map: "fk_permission_group_id_idx")
  @@index([permissionId], map: "fk_permission_id_idx")
  @@map("Limit")
}

model LimitType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  description String?  @map("description") @database.VarChar(200)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("LimitType")
}

model LimitValue {
  id          Int      @id @map("id") @default(autoincrement())
  limitId     Int      @map("limit_id")
  name        String   @map("name") @database.VarChar(45)
  description String?  @map("description") @database.VarChar(200)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@index([limitId], map: "fk_limit_id_idx")
  @@map("LimitValue")
}

model MailchimpCampaign {
  id              Int     @id @map("id") @default(autoincrement())
  name            String  @map("name") @database.VarChar(225)
  workflowId      String? @map("workflow_id") @database.VarChar(45)
  mailchimpTypeId Int?    @map("mailchimp_type_id")
  parentId        Int?    @map("parent_id")

  @@map("MailchimpCampaign")
}

model MailchimpCampaignMember {
  id                     Int      @id @map("id") @default(autoincrement())
  mailchimpMemberEmailId String?  @map("mailchimp_member_email_id") @database.VarChar(255)
  mailchimpCampaignId    Int      @map("mailchimp_campaign_id")
  convDate               String?  @map("conv_date") @database.VarChar(255)
  type                   String?  @map("type") @database.VarChar(255)
  reason                 String?  @map("reason") @database.VarChar(255)
  createdTime            DateTime @default(now()) @map("created_time")

  @@index([mailchimpCampaignId], map: "fk_mai_mailchimp_campaign_id_mai_id_gjmi")
  @@index([mailchimpMemberEmailId], map: "fk_mai_mailchimp_member_email_id_mai_email_id_jbpa")
  @@map("MailchimpCampaignMember")
}

model MailchimpMember {
  emailId      String    @id @map("email_id") @database.VarChar(255)
  emailAddress String    @map("email_address") @database.VarChar(255)
  optInTime    DateTime? @map("opt_in_time")
  deletedTime  DateTime  @default(now()) @map("deleted_time")
  isDeleted    Boolean   @default(false) @map("is_deleted")

  @@map("MailchimpMember")
}

model MailchimpSummary {
  id                  Int      @id @map("id") @default(autoincrement())
  open                Int?     @map("open")
  uniqueOpen          Int?     @map("unique_open")
  click               Int?     @map("click")
  subscriberClick     Int?     @map("subscriber_click")
  emailSent           Int?     @map("email_sent")
  unsubscribed        Int?     @map("unsubscribed")
  bounced             Int?     @map("bounced")
  abusedReport        Int?     @map("abused_report")
  mailchimpCampaignId Int?     @map("mailchimp_campaign_id")
  createdTime         DateTime @default(now()) @map("created_time")

  @@index([mailchimpCampaignId], map: "fk_mai_mailchimp_campaign_id_mai_id_kf6o")
  @@map("MailchimpSummary")
}

model MailchimpTag {
  id            Int      @id @map("id") @default(autoincrement())
  name          String   @map("name") @database.VarChar(200)
  description   String?  @map("description") @database.Text
  contactFromId Int?     @map("contact_from_id")
  createdTime   DateTime @default(now()) @map("created_time")
  updatedTime   DateTime @updatedAt @map("updated_time")
  deletedTime   DateTime @default(now()) @map("deleted_time")
  isDeleted     Boolean  @default(false) @map("is_deleted")

  @@index([contactFromId], map: "fk_mt_contact_form_idx")
  @@map("MailchimpTag")
}

model Message {
  id            Int      @id @map("id") @default(autoincrement())
  userId        Int      @map("user_id")
  supportCaseId Int      @map("support_case_id")
  content       String?  @map("content") @database.Text
  createdTime   DateTime @default(now()) @map("created_time")
  deletedTime   DateTime @default(now()) @map("deleted_time")
  isDeleted     Boolean  @default(false) @map("is_deleted")

  @@index([supportCaseId], map: "fk_mes_support_case_id_sup_id_1au7")
  @@index([userId], map: "fk_mes_user_id_use_id_1n2l")
  @@map("Message")
}

model Note {
  id                 Int      @id @map("id") @default(autoincrement())
  title              String?  @map("title") @database.VarChar(255)
  description        String?  @map("description") @database.Text
  taskId             Int?     @map("task_id")
  companyMemberId    Int?     @map("company_member_id")
  isBelongToClient   Boolean  @map("is_belong_to_client") @default(false)
  isComplianceReject Boolean  @map("is_compliance_reject") @default(false)
  userId             Int?     @map("user_id")
  noteTypeId         Int?     @map("note_type_id")
  companyId          Int?     @map("company_id")
  parentId           Int?     @map("parent_id")
  noteStatusId       Int?     @map("note_status_id")
  processStepId      Int?     @map("process_step_id")
  createdTime        DateTime @default(now()) @map("created_time")
  updatedTime        DateTime @updatedAt @map("updated_time")
  deletedTime        DateTime @default(now()) @map("deleted_time")
  isDeleted          Boolean  @default(false) @map("is_deleted")

  @@index([companyId], map: "fk_note_company_idx")
  @@index([companyMemberId], map: "fk_note_company_member_id_idx")
  @@index([noteTypeId], map: "fk_note_type_id_idx")
  @@index([processStepId], map: "fk_note_process_step_id_idx")
  @@index([taskId], map: "fk_note_task_id_idx")
  @@index([userId], map: "fk_not_user_id_use_id_bxzk")
  @@map("Note")
}

model NoteType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(255)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("NoteType")
}

model Notification {
  id                 Int      @id @map("id") @default(autoincrement())
  type               Int?     @map("type")
  description        String   @map("description") @database.VarChar(255)
  targetId           Int?     @map("target_id")
  orderId            Int?     @map("order_id")
  taskId             Int?     @map("task_id")
  profileId          Int?     @map("profile_id")
  supportCaseId      Int?     @map("support_case_id")
  isRead             Boolean  @map("is_read") @default(false)
  notificationTypeId Int      @map("notification_type_id")
  createdTime        DateTime @default(now()) @map("created_time")
  deletedTime        DateTime @default(now()) @map("deleted_time")
  isDeleted          Boolean  @default(false) @map("is_deleted")

  @@index([notificationTypeId], map: "fk_not_notification_type_id_not_id_6s6")
  @@map("Notification")
}

model NotificationStatus {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("NotificationStatus")
}

model NotificationTemplate {
  id                   Int      @id @map("id") @default(autoincrement())
  message              String?  @map("message") @database.Text
  isNotifyToCustomer   Boolean  @map("is_notify_to_customer") @default(false)
  isNotifyToLeader     Boolean  @map("is_notify_to_leader") @default(false)
  isNotifyToSupporter  Boolean  @map("is_notify_to_supporter") @default(false)
  notificationStatusId Int?     @map("notification_status_id")
  notificationTypeId   Int?     @map("notification_type_id")
  processStepId        Int?     @map("process_step_id")
  actionStepTypeId     Int?     @map("action_step_type_id")
  subscriptionId       Int?     @map("subscription_id")
  createdTime          DateTime @default(now()) @map("created_time")
  updatedTime          DateTime @updatedAt @map("updated_time")
  deletedTime          DateTime @default(now()) @map("deleted_time")
  isDeleted            Boolean  @default(false) @map("is_deleted")

  @@index([actionStepTypeId], map: "fk_notify_action_step_type_id_idx")
  @@index([notificationTypeId], map: "fk_notification_type_id_idx")
  @@index([notificationStatusId], map: "fk_notification_status_id_idx")
  @@index([processStepId], map: "fk_notify_process_step_id_idx")
  @@index([subscriptionId], map: "fk_notify_subscription_id_idx")
  @@map("NotificationTemplate")
}

model NotificationTemplateHasRole {
  roleId                 Int @map("role_id")
  notificationTemplateId Int @map("notification_template_id")

  @@id([notificationTemplateId, roleId])
  @@map("NotificationTemplateHasRole")
}

model NotificationType {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("NotificationType")
}

model Option {
  id          Int      @id @map("id") @default(autoincrement())
  content     String   @map("content") @database.Text
  questionId  String   @map("question_id")
  description String?  @map("description") @database.Text
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@index([questionId])
  @@map("Option")
}

model Order {
  id                  Int       @id @map("id") @default(autoincrement())
  customerId          Int?      @map("customer_id")
  companyId           Int?      @map("company_id")
  amount              Float?    @map("amount") @database.Float
  amountConverted     Float?    @map("amount_converted") @database.Float
  amountCode          String?   @map("amount_code") @database.VarChar(45)
  amountExchangeRate  Float?    @map("amount_exchange_rate") @database.Float
  paidAmount          Float?    @map("paid_amount") @database.Float
  refundAmount        Float?    @map("refund_amount") @database.Float
  discount            Float?    @map("discount") @database.Float
  creditAmount        Float?    @map("credit_amount") @database.Float
  creditDescription   String?   @map("credit_description") @database.VarChar(255)
  annualFee           Float?    @map("annual_fee") @database.Float
  isInvoiced          Boolean   @map("is_invoiced") @default(false)
  orderCode           String?   @map("order_code") @database.VarChar(255)
  xeroInvoiceId       String?   @map("xero_invoice_id") @database.VarChar(255)
  paymentGatewayId    Int?      @map("payment_gateway_id")
  paypalOrderId       String?   @map("paypal_order_id") @database.VarChar(255)
  paypalInvoiceId     String?   @map("paypal_invoice_id") @database.VarChar(255)
  xeroInvoiceStatusId Int?      @map("xero_invoice_status_id")
  xeroInvoiceUrl      String?   @map("xero_invoice_url") @database.VarChar(255)
  xeroInvoiceNo       String?   @map("xero_invoice_no") @database.VarChar(255)
  orderStatusId       Int       @map("order_status_id") @default(0)
  paidTime            DateTime? @map("paid_time")
  websiteId           Int?      @map("website_id") @default(1)
  billingId           Int?      @map("billing_id")
  orderFromId         Int?      @map("order_from_id")
  countryCardId       Int?      @map("country_card_id")
  createdTime         DateTime  @default(now()) @map("created_time")
  updatedTime         DateTime  @updatedAt @map("updated_time")
  deletedTime         DateTime  @default(now()) @map("deleted_time")
  isDeleted           Boolean   @default(false) @map("is_deleted")

  @@index([billingId], map: "fk_ord_billing_id_bil_id_7408")
  @@index([companyId], map: "fk_ord_company_id_com_id_3fyj")
  @@index([countryCardId], map: "fk_order_country_card_id_idx")
  @@index([customerId], map: "fk_ord_customer_id_cus_id_a3fz")
  @@index([orderFromId], map: "fk_order_from_id_idx")
  @@index([orderStatusId], map: "fk_ord_order_status_id_ord_id_j2rt")
  @@index([paymentGatewayId], map: "fk_ord_payment_gateway_id_pay_id_eysq")
  @@index([websiteId], map: "fk_ord_website_id_web_id_e77e")
  @@index([xeroInvoiceStatusId], map: "fk_ord_xero_invoice_status_id_xer_id_46g8")
  @@map("Order")
}

model OrderFrom {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("OrderFrom")
}

model OrderHasBank {
  bankId  Int @map("bank_id")
  orderId Int @map("order_id")

  @@id([bankId, orderId])
  @@map("OrderHasBank")
}

model OrderItem {
  id                  Int       @id @map("id") @default(autoincrement())
  orderId             Int       @map("order_id")
  serviceId           Int       @map("service_id")
  packageId           Int?      @map("package_id")
  unitPrice           Float?    @map("unit_price") @database.Float
  quantity            Int?      @map("quantity")
  amount              Float?    @map("amount") @database.Float
  description         String?   @map("description") @database.Text
  voucherId           Int?      @map("voucher_id")
  promotionId         Int?      @map("promotion_id")
  isRefund            Boolean   @map("is_refund") @default(false)
  discountOrderItemId Int?      @map("discount_order_item_id")
  orderItemStatusId   Int       @map("order_item_status_id") @default(0)
  finishedTime        DateTime? @map("finished_time")
  createdTime         DateTime  @default(now()) @map("created_time")
  updatedTime         DateTime  @updatedAt @map("updated_time")

  @@index([orderId], map: "fk_ord_order_id_ord_id_fvmb")
  @@index([orderItemStatusId], map: "fk_ord_order_item_status_id_ord_id_8qd8")
  @@index([packageId], map: "fk_ord_package_id_pac_id_3934")
  @@index([serviceId], map: "fk_ord_service_id_ser_id_hwno")
  @@map("OrderItem")
}

model OrderItemStatus {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  order       Int?     @map("order")
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("OrderItemStatus")
}

model OrderStatus {
  id          Int      @id @map("id") @default(autoincrement())
  name        String   @map("name") @database.VarChar(45)
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("OrderStatus")
}

model Package {
  id              Int      @id @map("id") @default(autoincrement())
  serviceTypeId   Int      @map("service_type_id")
  packageTypeId   Int      @map("package_type_id")
  countryId       Int      @map("country_id")
  websiteId       Int      @map("website_id")
  entityTypeId    Int      @map("entity_type_id")
  name            String   @map("name") @database.Text
  description     String?  @map("description") @database.Text
  xeroItemId      String?  @map("xero_item_id") @database.VarChar(45)
  xeroItemCode    String?  @map("xero_item_code") @database.VarChar(45)
  packageGroupId  Int      @map("package_group_id")
  packageAnnualId Int?     @map("package_annual_id")
  createdTime     DateTime @default(now()) @map("created_time")
  updatedTime     DateTime @updatedAt @map("updated_time")
  deletedTime     DateTime @default(now()) @map("deleted_time")
  isDeleted       Boolean  @default(false) @map("is_deleted")

  @@index([countryId], map: "fk_package_country1_idx")
  @@index([entityTypeId], map: "fk_package_entity_type1_idx")
  @@index([packageAnnualId], map: "fk_package_annual_idx")
  @@index([packageGroupId], map: "fk_package_package_group_idx")
  @@index([packageTypeId], map: "fk_package_package_type1")
  @@index([serviceTypeId], map: "fk_package_service_type1_idx")
  @@index([websiteId], map: "fk_package_website1_idx")
  @@map("Package")
}

model PackageGroup {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("PackageGroup")
}

model PackageHasService {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("PackageHasService")
}

model PackageType {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("PackageType")
}

model PaymentGateway {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("PaymentGateway")
}

model PaymentInformation {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("PaymentInformation")
}

model Permission {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Permission")
}

model PermissionGroup {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("PermissionGroup")
}

model Person {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Person")
}

model Process {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Process")
}

model ProcessHasNote {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ProcessHasNote")
}

model ProcessHasParentProcess {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ProcessHasParentProcess")
}

model ProcessLog {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ProcessLog")
}

model ProcessStep {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ProcessStep")
}

model ProcessStepHasFileTemplate {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ProcessStepHasFileTemplate")
}

model ProcessStepHasRole {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ProcessStepHasRole")
}

model ProcessStepType {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ProcessStepType")
}

model Promotion {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Promotion")
}

model ProposedName {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ProposedName")
}

model ProposedTime {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("ProposedTime")
}

model Question {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Question")
}

model QuestionGroup {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("QuestionGroup")
}

model QuestionGroupHasQuestion {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("QuestionGroupHasQuestion")
}

model QuestionPriority {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("QuestionPriority")
}

model QuestionType {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("QuestionType")
}

model RankingPartner {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("RankingPartner")
}

model RankingPartnerType {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("RankingPartnerType")
}

model Rate {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Rate")
}

model Role {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("Role")
}

model RoleHasLimit {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("RoleHasLimit")
}

model RoleHasPermission {
  id          Int      @id @map("id") @default(autoincrement())
  createdTime DateTime @default(now()) @map("created_time")
  updatedTime DateTime @updatedAt @map("updated_time")
  deletedTime DateTime @default(now()) @map("deleted_time")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  @@map("RoleHasPermission")
}
