datasource database {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model actionLog {
  id          Int       @default(autoincrement()) @map("id")
  userId      Int?      @map("user_id")
  description String?   @map("description") @database.VarChar(255)
  type        Int       @map("type")
  createdTime DateTime  @default(now()) @map("created_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@id([id, type])
  @@map("action_log")
}

model actionProcessStep {
  id                Int       @id @default(autoincrement()) @map("id")
  processStepId     Int       @map("process_step_id")
  nextProcessStepId Int       @map("next_process_step_id")
  countryId         Int?      @map("country_id")
  bankId            Int?      @map("bank_id")
  priority          Int?      @default(1) @map("priority") @database.TinyInt
  serviceTypeId     Int?      @map("service_type_id")
  actionStepTypeId  Int       @map("action_step_type_id")
  createdTime       DateTime  @default(now()) @map("created_time")
  updatedTime       DateTime  @updatedAt @map("updated_time")
  isDeleted         Boolean   @default(false) @map("is_deleted")
  deletedTime       DateTime? @map("deleted_time")

  @@map("actionProcessStep")
}

model actionStepType {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String?   @map("name") @database.VarChar(255)
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("actionStepType")
}

model additionProcess {
  id             Int       @id @default(autoincrement()) @map("id")
  taskId         Int       @map("task_id")
  trackingLink   String?   @map("tracking_link") @database.VarChar(200)
  serviceTypeIds Json?     @map("service_type_ids")
  createdTime    DateTime  @default(now()) @map("created_time")
  updatedTime    DateTime  @updatedAt @map("updated_time")
  isDeleted      Boolean   @default(false) @map("is_deleted")
  deletedTime    DateTime? @map("deleted_time")

  @@map("additionProcess")
}

model agency {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String?   @map("name") @database.VarChar(100)
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("agency")
}

model agent {
  id           Int       @id @default(autoincrement()) @map("id")
  name         String?   @map("name") @database.VarChar(200)
  email        String?   @map("email") @database.VarChar(200)
  countryId    Int?      @map("country_id")
  agencyId     Int       @map("agency_id")
  agentTypeId  Int       @map("agent_type_id")
  bankId       Int?      @map("bank_id")
  isHasNominee Boolean?  @default(false) @map("is_has_nominee")
  createdTime  DateTime  @default(now()) @map("created_time")
  updatedTime  DateTime  @updatedAt @map("updated_time")
  isDeleted    Boolean   @default(false) @map("is_deleted")
  deletedTime  DateTime? @map("deleted_time")

  @@map("agent")
}

model agentType {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(100)
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("agentType")
}

model airport {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String?   @map("name") @database.VarChar(100)
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("airport")
}

model answer {
  id              Int       @id @default(autoincrement()) @map("id")
  valueInt        Int?      @map("value_int")
  valueText       String?   @map("value_text") @database.Text
  optionId        Int       @map("option_id")
  taskId          Int?      @map("task_id")
  fatcaId         Int?      @map("fatca_id")
  selectCountryId Int?      @map("select_country_id")
  companyMemberId Int?      @map("company_member_id")
  questionId      Int?      @map("question_id")
  companyId       Int?      @map("company_id")
  createdTime     DateTime  @default(now()) @map("created_time")
  updatedTime     DateTime  @updatedAt @map("updated_time")
  isDeleted       Boolean   @default(false) @map("is_deleted")
  deletedTime     DateTime? @map("deleted_time")

  @@map("answer")
}

model Api {
  id              Int       @id @default(autoincrement()) @map("id")
  url             String    @map("url") @database.VarChar(255)
  apiMethodId     Int       @map("api_method_id")
  note            Json?     @map("note")
  isRecaptcha     Boolean?  @default(false) @map("is_recaptcha")
  isAuthorization Boolean?  @default(false) @map("is_authorization")
  description     String?   @map("description") @database.Text
  createdTime     DateTime  @default(now()) @map("created_time")
  updatedTime     DateTime  @updatedAt @map("updated_time")
  isDeleted       Boolean   @default(false) @map("is_deleted")
  deletedTime     DateTime? @map("deleted_time")

  @@map("Api")
}

model apiExample {
  id          Int       @id @default(autoincrement()) @map("id")
  apiId       Int       @map("api_id")
  apiStatusId Int       @map("api_status_id")
  apiGroupId  Int?      @map("api_group_id")
  body        Json?     @map("body")
  param       Json?     @map("param")
  query       Json?     @map("query")
  response    Json?     @map("response")
  description String?   @map("description") @database.Text
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("apiExample")
}

model apiGroup {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(255)
  description String?   @map("description") @database.Text
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("apiGroup")
}

model ApiHasGroup {
  apiId       Int       @map("api_id")
  apiGroupId  Int       @map("api_group_id")
  description String?   @map("description") @database.Text
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@id([apiGroupId, apiId])
  @@map("ApiHasGroup")
}

model ApiMethod {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(45)
  description String?   @map("description") @database.Text
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("ApiMethod")
}

model ApiStatus {
  id          Int       @id @default(autoincrement()) @map("id")
  code        String    @map("code") @database.VarChar(45)
  description String?   @map("description") @database.Text
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("ApiStatus")
}

model Bank {
  id             Int       @id @default(autoincrement()) @map("id")
  name           String    @map("name") @database.VarChar(100)
  image          String?   @map("image") @database.VarChar(200)
  countryId      Int?      @map("country_id")
  initialDeposit Int?      @map("initial_deposit")
  isVirtual      Boolean?  @default(false) @map("is_virtual")
  isDeleted      Boolean   @default(false) @map("is_deleted")
  deletedTime    DateTime? @map("deleted_time")

  @@map("Bank")
}

model BankBranch {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String?   @map("name") @database.VarChar(200)
  address     String?   @map("address") @database.VarChar(200)
  bankId      Int?      @map("bank_id")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("BankBranch")
}

model BankHasCountry {
  bankId           Int      @map("bank_id")
  countryId        Int      @map("country_id")
  isMemberCountry  Boolean? @default(false) @map("is_member_country")
  isPartnerCountry Boolean? @default(false) @map("is_partner_country")
  isOwnerCountry   Boolean? @default(false) @map("is_owner_country")
  isRemoteOpening  Boolean? @default(false) @map("is_remote_opening")
  score            Int?     @default(0) @map("score")

  @@id([bankId, countryId])
  @@map("BankHasCountry")
}

model BankHasFileTemplate {
  bankId         Int @map("bank_id")
  fileTemplateId Int @map("file_template_id")

  @@id([bankId, fileTemplateId])
  @@map("BankHasFileTemplate")
}

model BankHasKeyword {
  id      Int     @id @default(autoincrement()) @map("id")
  bankId  Int     @map("bank_id")
  keyword String? @map("keyword") @database.Text

  @@map("BankHasKeyword")
}

model BankingProcess {
  id                          Int       @id @default(autoincrement()) @map("id")
  taskId                      Int?      @map("task_id")
  bankId                      Int?      @map("bank_id")
  status                      Int?      @default(0) @map("status")
  clientTime                  BigInt?   @map("client_time")
  content                     String    @map("content") @database.VarChar(200)
  bankBranchId                Int?      @map("bank_branch_id")
  contactPerson               String?   @map("contact_person") @database.Text
  titleJob                    String?   @map("title_job") @database.VarChar(100)
  phone                       String?   @map("phone") @database.VarChar(45)
  applicationSetTrackingCode  String?   @map("application_set_tracking_code") @database.VarChar(100)
  applicationFormTrackingCode String?   @map("application_form_tracking_code") @database.VarChar(100)
  urlVideo                    String?   @map("url_video") @database.VarChar(100)
  phoneCountryId              Int?      @map("phone_country_id")
  bankAddress                 String?   @map("bank_address") @database.VarChar(45)
  createdTime                 DateTime  @default(now()) @map("created_time")
  updatedTime                 DateTime  @updatedAt @map("updated_time")
  isDeleted                   Boolean   @default(false) @map("is_deleted")
  deletedTime                 DateTime? @map("deleted_time")

  @@map("BankingProcess")
}

model Billing {
  id                Int       @id @default(autoincrement()) @map("id")
  countryId         Int?      @map("country_id")
  userId            Int?      @map("user_id")
  customerId        Int?      @map("customer_id")
  name              String?   @map("name") @database.Text
  postalCode        String?   @map("postal_code") @database.VarChar(45)
  phone             String?   @map("phone") @database.VarChar(45)
  address           String?   @map("address") @database.Text
  address1          String?   @map("address_1") @database.Text
  state             String?   @map("state") @database.VarChar(225)
  city              String?   @map("city") @database.VarChar(225)
  firstName         String?   @map("first_name") @database.VarChar(200)
  lastName          String?   @map("last_name") @database.VarChar(200)
  phoneNumber       String?   @map("phone_number") @database.VarChar(255)
  phoneCountryId    Int?      @map("phone_country_id")
  taxId             String?   @map("tax_id") @database.VarChar(50)
  xeroContactId     String?   @unique @map("xero_contact_id") @database.VarChar(255)
  additionProcessId Int?      @map("addition_process_id")
  createdTime       DateTime  @default(now()) @map("created_time")
  updatedTime       DateTime  @updatedAt @map("updated_time")
  isDeleted         Boolean   @default(false) @map("is_deleted")
  deletedTime       DateTime? @map("deleted_time")

  @@map("Billing")
}

model BusinessActivity {
  id                         Int       @id @default(autoincrement()) @map("id")
  name                       String    @map("name") @database.Text
  countryId                  Int?      @map("country_id")
  sicCode                    String?   @map("sic_code") @database.VarChar(10)
  description                String?   @map("description") @database.Text
  businessActivityIndustryId Int?      @map("business_activity_industry_id")
  labelIds                   Json?     @map("label_ids")
  isCommon                   Boolean?  @default(false) @map("is_common")
  isDeleted                  Boolean   @default(false) @map("is_deleted")
  deletedTime                DateTime? @map("deleted_time")

  @@map("BusinessActivity")
}

model BusinessActivityIndustry {
  id                              Int       @id @default(autoincrement()) @map("id")
  name                            String    @map("name") @database.Text
  country_id                      Int?      @map("country_id")
  parentId                        Int?      @map("parent_id")
  parentIds                       Json?     @map("parent_ids")
  businessActivityIndustryClassId Int?      @map("business_activity_industry_class_id")
  sicCode                         String?   @map("sic_code") @database.VarChar(10)
  isDeleted                       Boolean   @default(false) @map("is_deleted")
  deletedTime                     DateTime? @map("deleted_time")

  @@map("BusinessActivityIndustry")
}

model BusinessActivityIndustryClass {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(45)
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("BusinessActivityIndustryClass")
}

model BusinessActivityLabel {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.Text
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("BusinessActivityLabel")
}

model Campaign {
  id             Int       @id @default(autoincrement()) @map("id")
  name           String?   @map("name") @database.VarChar(100)
  description    String?   @map("description") @database.Text
  campaignTypeId Int?      @map("campaign_type_id")
  isDeleted      Boolean   @default(false) @map("is_deleted")
  deletedTime    DateTime? @map("deleted_time")

  @@map("Campaign")
}

model CampaignHasVoucherType {
  campaignId        Int   @map("campaign_id")
  voucherTypeId     Int   @map("voucher_type_id")
  totalQuantity     Int?  @map("total_quantity")
  remainingQuantity Int?  @map("remaining_quantity")
  percent           Int?  @map("percent")
  config            Json? @map("config")

  @@id([campaignId, voucherTypeId])
  @@map("CampaignHasVoucherType")
}

model CampaignType {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String?   @map("name") @database.VarChar(225)
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("CampaignType")
}

model CarSeat {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String?   @map("name") @database.Text
  babyMax     Int?      @default(0) @map("baby_max")
  value       Int?      @default(0) @map("value")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("CarSeat")
}

model ChangeRequest {
  id                     Int       @id @default(autoincrement()) @map("id")
  taskId                 Int       @map("task_id")
  companyId              Int       @map("company_id")
  changeRequestStatusId  Int       @map("change_request_status_id")
  companyMemberId        Int?      @map("company_member_id")
  companyPositionId      Int?      @map("company_position_id")
  toCompanyMemberId      Int?      @map("to_company_member_id")
  toCompanyPositionId    Int?      @map("to_company_position_id")
  changeRequestRelatedId Int?      @map("change_request_related_id")
  isApproved             Boolean   @default(false) @map("is_approved")
  createdTime            DateTime  @default(now()) @map("created_time")
  updatedTime            DateTime  @updatedAt @map("updated_time")
  isDeleted              Boolean   @default(false) @map("is_deleted")
  deletedTime            DateTime? @map("deleted_time")

  @@map("ChangeRequest")
}

model ChangeRequestItem {
  id              Int       @id @default(autoincrement()) @map("id")
  changeRequestId Int       @map("change_request_id")
  model           String    @map("model") @database.VarChar(100)
  fieldName       String    @map("field_name") @database.VarChar(100)
  value           String    @map("value") @database.Text
  isFee           Boolean   @default(true) @map("is_fee")
  dataType        String    @map("data_type") @database.VarChar(45)
  targetId        Int?      @map("target_id")
  createdTime     DateTime  @default(now()) @map("created_time")
  updatedTime     DateTime  @updatedAt @map("updated_time")
  isDeleted       Boolean   @default(false) @map("is_deleted")
  deletedTime     DateTime? @map("deleted_time")

  @@map("ChangeRequestItem")
}

model ChangeRequestStatus {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(45)
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("ChangeRequestStatus")
}

model Click {
  id             Int       @id @default(autoincrement()) @map("id")
  googleClientId String?   @map("google_client_id") @database.VarChar(225)
  ipAddress      String?   @map("ip_address") @database.VarChar(45)
  voucherTypeId  Int?      @map("voucher_type_id")
  createdTime    DateTime  @default(now()) @map("created_time")
  updatedTime    DateTime  @updatedAt @map("updated_time")
  isDeleted      Boolean   @default(false) @map("is_deleted")
  deletedTime    DateTime? @map("deleted_time")

  @@map("Click")
}

model Company {
  id                       Int       @id @default(autoincrement()) @map("id")
  version                  Int       @default(0) @map("version")
  companyCode              String?   @map("company_code") @database.VarChar(255)
  countryId                Int?      @map("country_id")
  companyRegNo             String?   @map("company_reg_no") @database.VarChar(255)
  name                     String?   @map("name") @database.VarChar(255)
  companyStatusId          Int?      @map("company_status_id")
  entityTypeId             Int?      @map("entity_type_id")
  companySuffixId          Int?      @map("company_suffix_id")
  preventiveName           String?   @map("preventive_name") @database.VarChar(255)
  address                  String?   @map("address") @database.VarChar(255)
  tax                      String?   @map("tax") @database.VarChar(255)
  tin                      String?   @map("tin") @database.VarChar(45)
  description              String?   @map("description") @database.VarChar(255)
  note                     String?   @map("note") @database.VarChar(255)
  incorporationDate        DateTime? @map("incorporation_date") @database.Date
  xeroContactId            String?   @map("xero_contact_id") @database.VarChar(255)
  businessActivity         String?   @map("business_activity") @database.VarChar(255)
  isOutsideCompany         Boolean   @default(false) @map("is_outside_company")
  renewalDate              DateTime? @map("renewal_date") @database.Date
  billingId                Int?      @map("billing_id")
  contactFullName          String?   @map("contact_full_name") @database.VarChar(255)
  contactPhone             String?   @map("contact_phone") @database.VarChar(255)
  contactEmail             String?   @map("contact_email") @database.VarChar(255)
  contactAddress           String?   @map("contact_address") @database.VarChar(255)
  tinCode                  String?   @map("tin_code") @database.VarChar(255)
  pinCode                  String?   @map("pin_code") @database.VarChar(255)
  contactPhoneCountryId    Int?      @map("contact_phone_country_id")
  contactPhoneNumber       String?   @map("contact_phone_number") @database.VarChar(255)
  contactState             String?   @map("contact_state") @database.VarChar(255)
  contactCity              String?   @map("contact_city") @database.VarChar(255)
  contactPostalCode        String?   @map("contact_postal_code") @database.VarChar(255)
  operatingCountryId       Int?      @map("operating_country_id")
  operatingCity            String?   @map("operating_city") @database.VarChar(200)
  operatingState           String?   @map("operating_state") @database.VarChar(200)
  operatingPostalCode      String?   @map("operating_postal_code") @database.VarChar(20)
  sourceFund               String?   @map("source_fund") @database.VarChar(255)
  businessFullName         String?   @map("business_full_name") @database.VarChar(200)
  businessAddress          String?   @map("business_address") @database.VarChar(200)
  businessCountryId        Int?      @map("business_country_id")
  businessCity             String?   @map("business_city") @database.VarChar(200)
  businessState            String?   @map("business_state") @database.VarChar(200)
  businessPostalCode       String?   @map("business_postal_code") @database.VarChar(20)
  businessDayEnd           Int?      @map("business_day_end")
  businessMonthEnd         Int?      @map("business_month_end")
  shareCapitalParValue     Int?      @map("share_capital_par_value")
  shareCapitalTypeOfShare  Int?      @map("share_capital_type_of_share")
  shareCapitalNumberShare  Int?      @map("share_capital_number_share")
  shareCapital             Int?      @map("share_capital")
  shareCapitalClassOfShare String?   @map("share_capital_class_of_share") @database.VarChar(255)
  issuedNumberShare        Int?      @map("issued_number_shared")
  remainingNumberShare     Int?      @map("remaining_number_share")
  articlesOfOrganization   Int?      @map("articles_of_organization")
  recordNumber             String?   @map("record_number") @database.VarChar(255)
  numOfCheckingBank        Int?      @map("num_of_checking_bank")
  businessAnnualReport     String?   @map("business_annual_report") @database.VarChar(255)
  sealImage                String?   @map("seal_image") @database.VarChar(255)
  leftCheckingBank         Int?      @map("left_checking_bank")
  businessActivityDetail   Int?      @map("business_activity_detail")
  createdTime              DateTime  @default(now()) @map("created_time")
  updatedTime              DateTime  @updatedAt @map("updated_time")
  isDeleted                Boolean   @default(false) @map("is_deleted")
  deletedTime              DateTime? @map("deleted_time")

  @@map("Company")
}

model CompanyEvent {
  id                 Int       @id @default(autoincrement()) @map("id")
  companyId          Int       @map("company_id")
  serviceId          Int       @map("service_id")
  orderId            Int?      @map("order_id")
  name               String    @map("name") @database.VarChar(255)
  description        String?   @map("description") @database.Text
  dateCompleted      DateTime? @map("date_completed") @database.Date
  dueDate            DateTime? @map("due_date") @database.Date
  dateRemind         DateTime? @map("date_remind") @database.Date
  isNotShow          Boolean   @default(false) @map("is_not_show")
  companyEventTypeId Int?      @map("company_event_type_id")
  isNotifyDueRenewal Boolean   @default(false) @map("is_notify_due_renewal")
  createdTime        DateTime  @default(now()) @map("created_time")
  updatedTime        DateTime  @updatedAt @map("updated_time")
  isDeleted          Boolean   @default(false) @map("is_deleted")
  deletedTime        DateTime? @map("deleted_time")

  @@map("CompanyEvent")
}

model CompanyEventType {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.Text
  description String?   @map("description") @database.Text
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("CompanyEventType")
}

model CompanyHasBusinessActivity {
  companyId          Int @map("company_id")
  businessActivityId Int @map("business_activity_id")

  @@id([companyId, businessActivityId])
  @@map("CompanyHasBusinessActivity")
}

model CompanyHasCurrency {
  companyId  Int @map("company_id")
  currencyId Int @map("currency_id")

  @@id([companyId, currencyId])
  @@map("CompanyHasCurrency")
}

model CompanyHasOperationCountry {
  companyId Int @map("company_id")
  countryId Int @map("country_id")

  @@id([companyId, countryId])
  @@map("CompanyHasOperationCountry")
}

model CompanyInterest {
  id                         Int       @id @default(autoincrement()) @map("id")
  taskId                     Int       @map("task_id")
  no                         Int?      @map("no")
  companyId                  Int       @map("company_id")
  companyMemberId            Int       @map("company_member_id")
  companyPositionId          Int?      @map("company_position_id")
  corporationCompanyMemberId Int?      @map("corporation_company_member_id")
  startNumber                Int?      @map("start_number")
  endNumber                  Int?      @map("end_number")
  value                      Float     @map("value") @database.Float
  isValid                    Boolean   @default(false) @map("is_valid")
  isApproved                 Boolean   @default(false) @map("is_approved")
  issuedFileId               Int?      @map("issued_file_id")
  issuedDated                DateTime? @map("issued_dated") @database.Date
  expiredDated               DateTime? @map("expired_dated") @database.Date
  createdTime                DateTime  @default(now()) @map("created_time")
  updatedTime                DateTime  @updatedAt @map("updated_time")
  isDeleted                  Boolean   @default(false) @map("is_deleted")
  deletedTime                DateTime? @map("deleted_time")

  @@map("CompanyInterest")
}

model CompanyMember {
  id                           Int       @id @default(autoincrement()) @map("id")
  companyId                    Int       @map("company_id")
  countryId                    Int?      @map("country_id")
  typeMemberId                 Int?      @map("type_member_id")
  isNominee                    Boolean   @default(false) @map("is_nominee")
  isApproved                   Boolean   @default(false) @map("is_approved")
  firstName                    String?   @map("first_name") @database.VarChar(255)
  middleName                   String?   @map("middle_name") @database.VarChar(255)
  lastName                     String?   @map("last_name") @database.VarChar(255)
  fullName                     String?   @map("full_name") @database.VarChar(255)
  corporationName              String?   @map("corporation_name") @database.VarChar(255)
  corporationNumber            String?   @map("corporation_number") @database.VarChar(255)
  corporationDate              DateTime? @map("corporation_date") @database.Date
  genderId                     Int?      @map("gender_id")
  major                        String?   @map("major") @database.VarChar(255)
  phone                        String?   @map("phone") @database.VarChar(255)
  email                        String?   @map("email") @database.VarChar(255)
  birthday                     DateTime? @map("birthday") @database.Date
  birthCountryId               Int?      @map("birth_country_id")
  address                      String?   @map("address") @database.VarChar(255)
  passport                     String?   @map("passport") @database.VarChar(255)
  passportIssueDate            DateTime? @map("passport_issue_date") @database.Date
  passportExpireDate           DateTime? @map("passport_expire_date") @database.Date
  ssn                          String?   @map("ssn") @database.VarChar(255)
  description                  String?   @map("description") @database.VarChar(255)
  phoneCountryId               Int?      @map("phone_country_id")
  phoneNumber                  String?   @map("phone_number") @database.VarChar(255)
  assetSourceFundCastInBank    Int?      @map("asset_source_fund_cast_in_bank")
  assetSourceFundRealEstate    Int?      @map("asset_source_fund_real_estate")
  assetSourceFundOtherDetail   String?   @map("asset_source_fund_other_detail") @database.VarChar(255)
  assetSourceFundOtherMoney    Int?      @map("asset_source_fund_other_money")
  incomeSourceFundInvestment   Int?      @map("income_source_fund_investment")
  incomeSourceFundSelfEmployed Int?      @map("income_source_fund_self_employed")
  incomeSourceFundOtherDetail  String?   @map("income_source_fund_other_detail") @database.VarChar(255)
  incomeSourceFundOtherMoney   Int?      @map("income_source_fund_other_money")
  businessActivityDetail       String?   @map("business_activity_detail") @database.Text
  serviceAddress               String?   @map("service_address") @database.VarChar(255)
  operationAddress             String?   @map("operation_address") @database.VarChar(255)
  natureBusiness               String?   @map("nature_business") @database.VarChar(255)
  relationshipIntendedCompany  String?   @map("relationship_intended_company") @database.VarChar(255)
  city                         String?   @map("city") @database.VarChar(255)
  state                        String?   @map("state") @database.VarChar(255)
  postalCode                   String?   @map("postal_code") @database.VarChar(255)
  addressCountryId             Int?      @map("address_country_id")
  createdTime                  DateTime  @default(now()) @map("created_time")
  updatedTime                  DateTime  @updatedAt @map("updated_time")
  isDeleted                    Boolean   @default(false) @map("is_deleted")
  deletedTime                  DateTime? @map("deleted_time")

  @@map("CompanyMember")
}

model CompanyMemberOperationCountries {
  companyMemberId Int @map("company_member_id")
  countryId       Int @map("country_id")

  @@id([companyMemberId, countryId])
  @@map("CompanyMemberOperationCountries")
}

model CompanyMemberIssueReference {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(100)
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("companyMemberIssueReference")
}

model CompanyMemberReferences {
  id                            Int       @id @default(autoincrement()) @map("id")
  companyMemberId               Int       @map("company_member_id")
  companyMemberIssueReferenceId Int?      @map("company_member_issuse_reference_id")
  name                          String?   @map("name") @database.VarChar(255)
  phoneNumber                   String?   @map("phone_number") @database.VarChar(255)
  phoneCountryId                Int?      @map("phone_country_id")
  fax                           String?   @map("fax") @database.VarChar(255)
  email                         String?   @map("email") @database.VarChar(255)
  address                       String?   @map("address") @database.VarChar(255)
  createdTime                   DateTime  @default(now()) @map("created_time")
  updatedTime                   DateTime  @updatedAt @map("updated_time")
  isDeleted                     Boolean   @default(false) @map("is_deleted")
  deletedTime                   DateTime? @map("deleted_time")

  @@map("CompanyMemberReferences")
}

model CompanyMemberType {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(45)
  description String?   @map("description") @database.Text
  parentId    Int?      @map("parent_id")
  isRequired  Boolean   @default(false) @map("is_required")
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("CompanyMemberType")
}

model CompanyOwnership {
  id                         Int       @id @default(autoincrement()) @map("id")
  taskId                     Int       @map("task_id")
  no                         Int?      @map("no")
  companyId                  Int       @map("company_id")
  companyMemberId            Int       @map("company_member_id")
  companyPositionId          Int?      @map("company_position_id")
  corporationCompanyMemberId Int?      @map("corporation_company_member_id")
  value                      Float     @map("value") @database.Float
  isValid                    Boolean   @default(false) @map("is_valid")
  isApproved                 Boolean   @default(false) @map("is_approved")
  issuedFileId               Int?      @map("issued_file_id")
  issuedDated                DateTime? @map("issued_dated") @database.Date
  expiredDated               DateTime? @map("expired_dated") @database.Date
  createdTime                DateTime  @default(now()) @map("created_time")
  updatedTime                DateTime  @updatedAt @map("updated_time")
  isDeleted                  Boolean   @default(false) @map("is_deleted")
  deletedTime                DateTime? @map("deleted_time")

  @@map("CompanyOwnership")
}

model CompanyPosition {
  id                                Int       @id @default(autoincrement()) @map("id")
  companyMemberId                   Int       @map("company_member_id")
  companyMemberTypeId               Int       @map("company_member_type_id")
  corporationCompanyMemberId        Int?      @map("corporation_company_member_id")
  numberAllotted                    Int       @default(0) @map("number_allotted")
  percentOfInterest                 Float     @default(0) @map("percent_of_interest") @database.Float
  ownPercent                        Float     @default(0) @map("own_percent") @database.Float
  dateOfAppointment                 DateTime? @map("date_of_appointment") @database.Date
  dateOfResign                      DateTime? @map("date_of_resign") @database.Date
  isAppointed                       Boolean   @default(false) @map("is_appointed")
  isApproved                        Boolean   @default(false) @map("is_approved")
  isContactPerson                   Boolean   @default(false) @map("is_contact_person")
  isHandleRelationshipContactPerson Boolean   @default(false) @map("is_handle_relationship_contact_person")
  positionDetail                    String?   @map("position_detail") @database.VarChar(255)
  relationshipWithCompany           Json?     @map("relationship_with_company")
  createdTime                       DateTime  @default(now()) @map("created_time")
  updatedTime                       DateTime  @updatedAt @map("updated_time")
  isDeleted                         Boolean   @default(false) @map("is_deleted")
  deletedTime                       DateTime? @map("deleted_time")

  @@map("CompanyPosition")
}

model CompanyShare {
  id                         Int       @id @default(autoincrement()) @map("id")
  taskId                     Int       @map("task_id")
  no                         Int?      @map("no")
  companyId                  Int       @map("company_id")
  companyMemberId            Int       @map("company_member_id")
  companyPositionId          Int?      @map("company_position_id")
  corporationCompanyMemberId Int?      @map("corporation_company_member_id")
  startNumber                BigInt?   @map("start_number")
  endNumber                  BigInt?   @map("end_number")
  value                      BigInt    @map("value")
  isValid                    Boolean   @default(false) @map("is_valid")
  isApproved                 Boolean   @default(false) @map("is_approved")
  issuedFileId               Int?      @map("issued_file_id")
  issuedDated                DateTime? @map("issued_dated") @database.Date
  expiredDated               DateTime? @map("expired_dated") @database.Date
  createdTime                DateTime  @default(now()) @map("created_time")
  updatedTime                DateTime  @updatedAt @map("updated_time")
  isDeleted                  Boolean   @default(false) @map("is_deleted")
  deletedTime                DateTime? @map("deleted_time")

  @@map("CompanyShare")
}

model CompanyStatus {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(45)
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("CompanyStatus")
}

model CompanySuffix {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(45)
  description String?   @map("description") @database.Text
  isPrefix    Boolean   @default(false) @map("is_prefix")
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("CompanySuffix")
}

model ContactFrom {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(50)
  description String?   @map("description") @database.Text
  type        Int       @default(2) @map("type")
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("ContactFrom")
}

model ContactFromHistory {
  id            Int       @id @default(autoincrement()) @map("id")
  customerId    Int       @map("customer_id")
  contactFromId Int       @map("contact_from_id")
  tagName       String?   @map("tag_name") @database.VarChar(255)
  createdTime   DateTime  @default(now()) @map("created_time")
  updatedTime   DateTime  @updatedAt @map("updated_time")
  isDeleted     Boolean   @default(false) @map("is_deleted")
  deletedTime   DateTime? @map("deleted_time")

  @@map("ContactFromHistory")
}

model Continent {
  id          Int       @id @default(autoincrement()) @map("id")
  name        String    @map("name") @database.VarChar(45)
  createdTime DateTime  @default(now()) @map("created_time")
  updatedTime DateTime  @updatedAt @map("updated_time")
  isDeleted   Boolean   @default(false) @map("is_deleted")
  deletedTime DateTime? @map("deleted_time")

  @@map("Continent")
}

model Country {
  id           Int       @id @default(autoincrement()) @map("id")
  name         String    @map("name") @database.VarChar(45)
  guid         String    @unique @map("guid") @database.VarChar(100)
  countryCode  String?   @map("country_code") @database.VarChar(45)
  phoneCode    String?   @map("phone_code") @database.VarChar(45)
  subName      String    @map("sub_name") @database.VarChar(255)
  isRestricted Boolean   @default(false) @map("is_restricted")
  isCountry    Boolean   @default(false) @map("is_country")
  continentId  Int?      @map("continent_id")
  isDeleted    Boolean   @default(false) @map("is_deleted")
  deletedTime  DateTime? @map("deleted_time")

  @@map("Country")
}

model CountryHasCompanySuffix {
  countryId       Int @map("country_id")
  companySuffixId Int @map("company_suffix_id")

  @@id([countryId, companySuffixId])
  @@map("CountryHasCompanySuffix")
}

model CountryHasEntityType {
  countryId    Int @map("country_id")
  entityTypeId Int @map("entity_type_id")

  @@id([countryId, entityTypeId])
  @@map("CountryHasEntityType")
}

model CountryHasEntityTypeHasFileTemplate {
  countryHasEntityTypeId Int @map("country_has_entity_type_id")
  fileTemplateId         Int @map("file_template_id")

  @@id([countryHasEntityTypeId, fileTemplateId])
  @@map("CountryHasEntityTypeHasFileTemplate")
}

model CountryHasQuestion {
  countryId Int @map("country_id")
  serviceId Int @map("service_id")

  @@id([countryId, serviceId])
  @@map("CountryHasQuestion")
}

model CustomerHasBank {
  customerId Int @map("customer_id")
  bankId     Int @map("bank_id")

  @@id([customerId, bankId])
  @@map("CustomerHasBank")
}

model CustomerHasSurveyChoice {
  customerId     Int       @map("customer_id")
  surveyChoiceId Int       @map("survey_choice_id")
  surveyContent  String?   @map("survey_content") @database.VarChar(255)
  createdTime    DateTime  @default(now()) @map("created_time")
  updatedTime    DateTime  @updatedAt @map("updated_time")
  isDeleted      Boolean   @default(false) @map("is_deleted")
  deletedTime    DateTime? @map("deleted_time")

  @@id([customerId, surveyChoiceId])
  @@index([customerId], map: "fk_cus_customer_id_cus_id_5h8l")
  @@map("CustomerHasSurveyChoice")
}
